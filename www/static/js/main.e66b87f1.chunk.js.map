{"version":3,"sources":["selectors/globals.js","selectors/file.js","selectors/form.js","selectors/eventStatus.js","constants/globals.js","actions/globals.js","utils/helpers.js","utils/api.js","components/NavigationScreenComponent/MapComponent.jsx","components/NavigationScreenComponent/LocationMapComponent.jsx","components/NavigationScreenComponent/PlaceInfoCardComponent.jsx","components/NavigationScreenComponent/NavigationScreenComponent.jsx","components/NavigationScreenComponent/index.js","components/HOCToJS.jsx","screens/NavigationScreenContainer.js","constants/form.js","actions/form.js","components/CurrencyScreenComponent/index.js","components/CurrencyScreenComponent/CurrencyScreenComponent.jsx","screens/CurrencyScreenContainer.js","components/WeatherScreenComponent/WeatherScreenComponent.jsx","components/WeatherScreenComponent/index.js","screens/WeatherScreenContainer.js","components/AppBarComponent.jsx","components/BottomNavigationComponent.jsx","routes.js","sagas/currencySaga.js","actions/eventStatusActions.js","constants/eventStatus.js","sagas/globalSaga.js","sagas/index.js","reducers/globalReducer.js","reducers/externalsReducer.js","constants/externals.js","reducers/formReducer.js","reducers/fileReducer.js","constants/file.js","reducers/eventStatusReducer.js","configureStore.js","App.js","serviceWorker.js","index.js","components/CurrencyScreenComponent/styles.module.scss"],"names":["getGlobalState","state","get","getFileState","arguments","length","undefined","makeSelectFileModelByMeta","createSelector","fileState","meta","getIn","getFormState","makeSelectFormModelByMeta","formState","getEventStatusState","APP_DEVICE_READY","APP_LOCATION_REQUEST","APP_LOCATION_WATCH_CLEAR","appLocationChange","_ref","type","lat","lng","appLocationWatchChange","_ref2","watchId","defaultOptions","enableHighAccuracy","defaultOnError","e","console","error","Helpers","watchLocation","onSuccess","_ref$onError","onError","_ref$options","options","Object","objectSpread","navigator","geolocation","watchPosition","position","coords","latitude","longitude","getCurrentLatLng","_ref2$options","getCurrentPosition","debug","stopLocationWatch","_ref3","log","clearWatch","ApiHelper","getLocationDetails","axios","concat","then","response","data","res","results","annotations","components","city","city_district","country","country_code","road","postcode","currency_code","currency","iso_code","name","currency_symbol","symbol","destructureLocData","catch","getRates","_ref3$from","from","_ref3$to","to","rates","Error","Component","LocationMapComponent","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClickReset","gpsLocation","viewport","center","zoom","setState","onViewportChanged","initialViewport","height","nextProps","newViewport","window","physicalScreenHeight","screen","_this$props","isPlaceInfoLoading","style","react_default","a","createElement","Map","onClick","TileLayer","url","attribution","Marker","Popup","React","withStyles","card","margin","marginBottom","loader","width","bullet","display","transform","title","fontSize","pos","classes","_ref$placeInfo","placeInfo","_ref$isPlaceInfoLoadi","className","Card_default","load","react_content_loader_es","x","y","rx","ry","Fragment","CardContent_default","Typography_default","color","variant","gutterBottom","component","NavigationScreenComponent","onSearchbarEnable","searchBar","isSearchActive","onSearchbarDisable","onBlur","event","toggle","onLocationRequest","onStopLocationWatch","Grid_default","container","root","spacing","item","xs","NavigationScreenComponent_LocationMapComponent","NavigationScreenComponent_PlaceInfoCardComponent","map","top","bottom","HOCtoJS","WrappedComponent","wrappedComponentProps","propsJS","entries","reduce","newProps","wrappedComponentProp","Iterable","isIterable","toJS","connect","getLocation","globalState","Immutable","getPrevLocation","getFileModel","getFormModel","getEventStatusField","eventStatusState","field","ownProps","location","fileModel","formModel","dispatch","HOCToJS","FORM_MODEL_CHANGE","FORM_MODEL_FIELD_CHANGE","formModelChange","overrideModel","_ref$fromSaga","fromSaga","formModelFieldChange","value","_ref2$fromSaga","CurrencyScreenComponent","openPopUp","popupOpened","popupField","closePopUp","onListItemSelected","onChange","TextCMP","theme","flexWrap","textField","marginLeft","unit","marginRight","dense","marginTop","menu","TextField_default","id","label","fullWidth","WeatherScreenComponent","withRouter","flexGrow","grow","route","routes","pathname","AppBar_default","Toolbar_default","IconButton_default","aria-label","Settings_default","SimpleBottomNavigation","handleChange","history","keys","push","renderRoutes","key","BottomNavigationAction_default","icon","_this$props2","BottomNavigation_default","showLabels","/","PlaceIcon","/currency","AttachMoneyIcon","/weather","CloudIcon","currencySaga","handleFieldChange","regenerator_default","wrap","_context","prev","next","takeLatest","stop","_marked","action","formModelIM","eventFromSrc","converted","_context2","select","sent","sourceCurrency","destCurrency","abrupt","sourceValue","toFixed","put","t0","_marked2","eventStatusModelFieldChange","globalSaga","watchDeviceReadySaga","watchDeviceLocationRequestSaga","watchDeviceLocationWatchClearSaga","handleAppDeviceReady","handleDeviceLocationRequest","handleDeviceLocationWatchClear","watchGlobalChannel","globalChannel","channel","getGlobalLocationWatchId","all","globalSaga_marked","globalSaga_marked2","_context3","_marked3","_context4","_marked4","_context5","_marked5","_context6","locData","_marked6","_context7","_marked7","_context8","take","_marked8","rootSaga","sagas_marked","initialState","fromJS","prevLocation","locationWatchId","test","globalReducer","oldLat","oldLng","setIn","externalsReducer","newState","reducer","set","formReducer","form","newForm","model","fileReducer","file","newFile","eventStatusReducer","eventStatus","newEventStatus","sagaMiddleware","createSagaMiddleware","composeEnhancers","composeWithDevTools","serialize","immutable","store","createStore","combineReducers","globals","externals","applyMiddleware","run","MainCmp","components_AppBarComponent","appRoutes","Switch","Route","exact","path","NavigationScreenContainer","CurrencyScreenContainer","WeatherScreenContainer","BottomNavigationComponent","MainApp","es","HashRouter","isLocalhost","Boolean","hostname","match","register","config","URL","process","href","origin","addEventListener","swUrl","fetch","contentType","headers","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","startApp","ReactDOM","render","App","document","getElementById","cordova","module","exports","CurrencyContainer","CurrencyContainer_Input","CurrencyContainer_Select","CurrencyButton"],"mappings":"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","file":"static/js/main.e66b87f1.chunk.js","sourcesContent":["import { createSelector } from 'reselect';\r\nimport Immutable from 'immutable';\r\n\r\n\r\nexport const getGlobalState = (state) => state.get('globals');\r\n\r\nexport const makeSelectGlobalLocation = () => createSelector(\r\n    getGlobalState,\r\n    (globalState) => {\r\n        return !globalState ? Immutable.Map() : globalState.getIn(['location'])\r\n    }\r\n);\r\n\r\nexport const makeSelectGlobalPrevLocation = () => createSelector(\r\n    getGlobalState,\r\n    (globalState) => {\r\n        return !globalState ? Immutable.Map() : globalState.getIn(['prevLocation'])\r\n    }\r\n);\r\n\r\nexport const makeSelectGlobalLocationWatchId = () => createSelector(\r\n    getGlobalState,\r\n    (globalState) => {\r\n        return !globalState ? Immutable.Map() : globalState.getIn(['locationWatchId'])\r\n    }\r\n);\r\n","import { createSelector } from 'reselect';\r\nimport Immutable from 'immutable';\r\n\r\n\r\nexport const getFileState = (state = {}) => state.get('file');\r\n\r\nexport const makeSelectFileModelByMeta = () => createSelector(\r\n    getFileState,\r\n    (fileState) => (meta) => {\r\n        return !fileState ? undefined: fileState.getIn([meta, 'model'])\r\n    }\r\n);\r\n\r\nexport const makeSelectFileModelFieldByMeta = () => createSelector(\r\n    getFileState,\r\n    (fileState) => (meta, field) => {\r\n        if (!fileState) return undefined;\r\n\r\n        return fileState.getIn([meta, 'model', field]);\r\n    }\r\n);","\r\nimport { createSelector } from 'reselect';\r\nimport Immutable from 'immutable';\r\n\r\n\r\nexport const getFormState = (state = {}) => state.get('form');\r\n\r\nexport const makeSelectFormModelByMeta = () => createSelector(\r\n    getFormState,\r\n    (formState) => (meta) => {\r\n        return !formState ? undefined : formState.getIn([meta, 'model'])\r\n    }\r\n);\r\n\r\nexport const makeSelectFormModelFieldByMeta = () => createSelector(\r\n    getFormState,\r\n    (formState) => (meta, field) => {\r\n        if (!formState) return undefined;\r\n\r\n        return formState.getIn([meta, 'model', field]);\r\n    }\r\n);","\r\nimport { createSelector } from 'reselect';\r\nimport Immutable from 'immutable';\r\n\r\n\r\nexport const getEventStatusState = (state = {}) => state.get('eventStatus');\r\n\r\nexport const makeSelectEventStatusModelByMeta = () => createSelector(\r\n    getEventStatusState,\r\n    (eventStatusState) => (meta) => {\r\n        return !eventStatusState ? undefined : eventStatusState.getIn([meta, 'model'])\r\n    }\r\n);\r\n\r\nexport const makeSelectEventStatusModelFieldByMeta = () => createSelector(\r\n    getEventStatusState,\r\n    (eventStatusState) => (meta, field) => {\r\n        if (!eventStatusState) return undefined;\r\n\r\n        return eventStatusState.getIn([meta, 'model', field]);\r\n    }\r\n);","export const APP_DEVICE_READY = 'APP_DEVICE_READY';\r\nexport const APP_LOCATION_CHANGE = 'APP_LOCATION_CHANGE';\r\nexport const APP_LOCATION_REQUEST = 'APP_LOCATION_REQUEST';\r\nexport const APP_LOCATION_WATCH_CHANGE = 'APP_LOCATION_WATCH_CHANGE';\r\nexport const APP_LOCATION_WATCH_CLEAR = 'APP_LOCATION_WATCH_CLEAR';","import {\r\n    APP_DEVICE_READY,\r\n    APP_LOCATION_CHANGE,\r\n    APP_LOCATION_REQUEST,\r\n    APP_LOCATION_WATCH_CHANGE,\r\n    APP_LOCATION_WATCH_CLEAR,\r\n} from '../constants/globals';\r\n\r\n\r\n\r\nexport const appDeviceReady = () => {\r\n    return {\r\n        type: APP_DEVICE_READY,\r\n    };\r\n}\r\n\r\nexport const appLocationChange = ({ lat, lng }) => {\r\n    return {\r\n        type: APP_LOCATION_CHANGE,\r\n        lat,\r\n        lng\r\n    };\r\n};\r\n\r\nexport const appLocationRequest = () => {\r\n    return {\r\n        type: APP_LOCATION_REQUEST,\r\n    };\r\n};\r\n\r\nexport const appLocationWatchChange = ({ watchId }) => {\r\n    return {\r\n        type: APP_LOCATION_WATCH_CHANGE,\r\n        watchId,\r\n    };\r\n};\r\n\r\nexport const appLocationWatchClear = () => {\r\n    return {\r\n        type: APP_LOCATION_WATCH_CLEAR,\r\n    };\r\n};","const defaultOptions = { enableHighAccuracy: true };\r\nconst defaultOnError = (e) => {\r\n    console.error(\"Geolocation error \", e);\r\n}\r\nconst Helpers = {\r\n    watchLocation: ({ onSuccess, onError = defaultOnError, options = {...defaultOptions}}) => {\r\n        return navigator.geolocation.watchPosition((position) => {\r\n            if (typeof position !== 'undefined') {\r\n                onSuccess && onSuccess({\r\n                    lat: position.coords.latitude,\r\n                    lng: position.coords.longitude,\r\n                });\r\n            }\r\n        }, onError, options);\r\n    },\r\n    getCurrentLatLng: ({ onSuccess, onError, options = {}} = {}) => {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            console.debug(\"POSITION\", position);\r\n            if (typeof position !== 'undefined') {\r\n                onSuccess && onSuccess({\r\n                    lat: position.coords.latitude,\r\n                    lng: position.coords.longitude,\r\n                });\r\n            }\r\n        }, onError, options);\r\n    },\r\n    stopLocationWatch: ({ watchId }) => {\r\n        console.log(\"Clearing watch id\");\r\n        navigator.geolocation.clearWatch(watchId);\r\n    }\r\n}\r\n\r\n\r\nexport default Helpers;","import axios from 'axios';\r\n\r\nconst destructureLocData = ({ data }) => {\r\n    const res = data.results.length > 0 ? data.results[0] : null;\r\n\r\n    if (!res) return null;\r\n\r\n    const { annotations, components } = res;\r\n\r\n    return {\r\n        city: components.city,\r\n        city_district: components.city_district,\r\n        country: components.country,\r\n        country_code: components.country_code,\r\n        road: components.road,\r\n        postcode: components.postcode,\r\n        currency_code: annotations.currency.iso_code,\r\n        currency: annotations.currency.name,\r\n        currency_symbol: annotations.currency.symbol,\r\n    };\r\n}\r\n\r\nconst ApiHelper = {\r\n    getLocationDetails: ({ lat, lng, onSuccess, onError }) => {\r\n        axios.get(`https://api.opencagedata.com/geocode/v1/json?q=${lat},${lng}&pretty=1&key=989ee4805561447581b22953c18a3e7b`)\r\n        .then(function (response) {\r\n            // handle success\r\n            console.debug(\"Opencage\", response);\r\n\r\n            onSuccess && onSuccess(destructureLocData({ data: response.data }));\r\n\r\n        })\r\n        .catch(function (error) {\r\n            // handle error\r\n            console.log(error);\r\n\r\n            onError && onError(error);\r\n        });\r\n    },\r\n    getRates: ({ from = 'USD', to = 'EUR', onSuccess, onError }) => {\r\n        try {    \r\n            return axios.get(`https://api.exchangeratesapi.io/latest?base=${from}&symbols=${to}`)\r\n            .then((response) => {\r\n                // handle success\r\n                console.log(response);\r\n                const rates = 1;\r\n                \r\n                if (!response.data || !response.data.rates) {\r\n                    throw new Error(\"No rates found.\");\r\n                }\r\n                \r\n                return response.data.rates[to];\r\n                // onSuccess && onSuccess(response.data.rates[to]);\r\n\r\n            })\r\n            .catch(function (error) {\r\n                // handle error\r\n                console.error(error);\r\n\r\n                //onError && onError(error);\r\n            });\r\n        } catch (error) {\r\n            console.error(error);\r\n\r\n            // onError && onError(error);\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport default ApiHelper;","\r\nimport React, { Component } from 'react';\r\nimport Leaflet from 'leaflet';\r\n\r\nimport Helpers from '../../utils/helpers';\r\nimport ApiHelpers from '../../utils/api';\r\n\r\n\r\nexport default class MapComponent extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n\r\n      this.locationData = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.map = Leaflet.map('map').fitWorld();\r\n\r\n    Leaflet.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {\r\n        // attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\r\n        maxZoom: 18,\r\n        id: 'mapbox.streets',\r\n        accessToken: 'pk.eyJ1Ijoiam9yZ2VpMDI0IiwiYSI6ImNqb2RncW5pbjFkaW0za29qMG1rMGlzanQifQ.96uFcGovHvXXegmXBV62Gg'\r\n    }).addTo(this.map);\r\n\r\n    const marker = Leaflet.marker([51.5, -0.09]).addTo(this.map);\r\n    const currCoords = Leaflet.latLng(53.386848,-6.068040);\r\n    const radius = 100 / 2;\r\n    this.map.setView(currCoords, 16, { maxZoom: 16 });\r\n    this.mainMarker = Leaflet.marker(currCoords).addTo(this.map);\r\n    this.mainCircle = Leaflet.circle(currCoords, radius).addTo(this.map);\r\n    this.watchLocation();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n      console.debug(\"Stopping location watch\", this.locationWatchId);\r\n    Helpers.stopLocationWatch({\r\n        watchId: this.locationWatchId,\r\n    });\r\n  }\r\n\r\n  getLocationInfo = ({ lat, lng }) => {\r\n      const self = this;\r\n    ApiHelpers.getLocationDetails({ \r\n        lat, \r\n        lng,\r\n        onSuccess: (data) => {\r\n            console.log(\"Location Data\", data);\r\n            self.locationData = { ...data };\r\n        }, \r\n        onError: () => {},\r\n    });\r\n  }\r\n\r\n  watchLocation = () => {\r\n    const geolocationSuccess = (position) => {\r\n        if (this.map !== undefined && this.map) {\r\n            const { accuracy, latitude, longitude } = position.coords;\r\n            const currCoords = Leaflet.latLng(latitude, longitude);\r\n            const radius = accuracy / 2;\r\n\r\n            this.map.setView(currCoords, 16, { maxZoom: 16 });\r\n            this.mainMarker.setLatLng(currCoords);\r\n            this.mainCircle.setLatLng(currCoords);\r\n\r\n            this.getLocationInfo({ lat: latitude, lng: longitude });\r\n        }\r\n    };\r\n\r\n    const geolocationError = (message) => {\r\n        navigator.notification.alert(\r\n            message,  // message\r\n            () => {},         // callback\r\n            'Geolocation Error',            // title\r\n            'Dismiss'                  // buttonName\r\n        );\r\n    };\r\n\r\n    this.locationWatchId = Helpers.watchLocation({\r\n        onSuccess: geolocationSuccess,\r\n        onError: geolocationError,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <React.Fragment>     \r\n            <div id=\"map\"></div>\r\n        </React.Fragment>\r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport {\r\n   Map,\r\n   Marker,\r\n   Popup,\r\n   TileLayer,\r\n   Circle,\r\n   FeatureGroup,\r\n   LayerGroup,\r\n   LayersControl,\r\n   Overlay,\r\n   Rectangle, } from 'react-leaflet';\r\n\r\n\r\nclass LocationMapComponent extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    const { gpsLocation } = props;\r\n\r\n    const initialViewport = {\r\n      center: [gpsLocation.lat-0.0005, gpsLocation.lng],\r\n      zoom: 18,\r\n    };\r\n\r\n    this.state = {\r\n      viewport: initialViewport,\r\n      lat: 51.505,\r\n      lng: -0.09,\r\n      zoom: 18,\r\n      height: 0\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { gpsLocation } = this.props;\r\n    \r\n    if (nextProps.gpsLocation.lat !== gpsLocation.lat || nextProps.gpsLocation.lng !== gpsLocation.lng) {\r\n      const newViewport = {\r\n        center: [nextProps.gpsLocation.lat-0.0005, nextProps.gpsLocation.lng],\r\n        zoom: 18,\r\n      };\r\n\r\n      this.setState({\r\n        viewport: newViewport,\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (typeof window !== 'undefined' && window) {\r\n      const physicalScreenHeight = window.screen.height;\r\n\r\n      this.setState({\r\n        height: physicalScreenHeight-112,\r\n      });\r\n    }\r\n    \r\n    // const { gpsLocation } = this.props;\r\n\r\n    // const newViewport = {\r\n    //   center: [gpsLocation.lat-0.0005, gpsLocation.lng],\r\n    //   zoom: 18,\r\n    // };\r\n\r\n    // this.setState({\r\n    //   viewport: newViewport,\r\n    // });\r\n  }\r\n\r\n  onClickReset = () => {\r\n    // Reset to position provided in props\r\n    const { gpsLocation } = this.props;\r\n\r\n    const viewport = {\r\n      center: [gpsLocation.lat-0.0005, gpsLocation.lng],\r\n      zoom: 18,\r\n    };\r\n\r\n    this.setState({ viewport })\r\n  }\r\n\r\n  onViewportChanged = (viewport) => {\r\n    // The viewport got changed by the user, keep track in state\r\n    console.debug(\"VIEWPORT\", viewport);\r\n    this.setState({ viewport })\r\n  }\r\n\r\n  render () {\r\n    const { gpsLocation, isPlaceInfoLoading } = this.props;\r\n    \r\n    const center = [gpsLocation.lat-0.0005, gpsLocation.lng]\r\n    const position = [gpsLocation.lat, gpsLocation.lng]\r\n\r\n    const style = {\r\n      height: `${this.state.height}px`\r\n    };\r\n\r\n    const zoom = isPlaceInfoLoading ? 17 : 18;\r\n\r\n\r\n    return (\r\n        <Map \r\n          style={style} \r\n          center={center} \r\n          zoom={zoom}\r\n          onClick={this.onClickReset}\r\n          onViewportChanged={this.onViewportChanged}\r\n          viewport={this.state.viewport}>\r\n        >\r\n          <TileLayer\r\n            url='http://{s}.tile.osm.org/{z}/{x}/{y}.png'\r\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          />\r\n          {\r\n            isPlaceInfoLoading ? '' : (\r\n              <Marker position={position}>\r\n                <Popup>\r\n                  <span>This is your<br/>current location.</span>\r\n                </Popup>\r\n              </Marker>\r\n            )\r\n          }\r\n        </Map>\r\n      )\r\n  }\r\n}\r\n\r\nexport default LocationMapComponent;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport ContentLoader, { List } from 'react-content-loader';\r\n\r\nconst styles = {\r\n  card: {\r\n      margin: '20px',\r\n      marginBottom: '15px',\r\n  },\r\n  loader: {\r\n    width: '100%',\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n};\r\n\r\nconst PlaceInfoCardComponent = ({ classes, placeInfo = {}, isPlaceInfoLoading = false, }) => {\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const { city, city_district, country, postcode, road } = placeInfo;\r\n  return (\r\n    <Card className={classes.card}>\r\n        {\r\n          isPlaceInfoLoading ? (\r\n            <div className={classes.load}>\r\n              <ContentLoader style={{ width: '100%', margin: '10px', }}>\r\n                  <rect x=\"0\" y=\"0\" rx=\"3\" ry=\"3\" width=\"50%\" height=\"15\" />\r\n                  <rect x=\"0\" y=\"35\" rx=\"3\" ry=\"3\" width=\"90%\" height=\"15\" />\r\n                  <rect x=\"0\" y=\"60\" rx=\"3\" ry=\"3\" width=\"90%\" height=\"15\" />\r\n                  <rect x=\"0\" y=\"85\" rx=\"3\" ry=\"3\" width=\"200\" height=\"15\" />\r\n                  <rect x=\"0\" y=\"110\" rx=\"3\" ry=\"3\" width=\"80%\" height=\"25\" />\r\n              </ContentLoader>\r\n            </div>\r\n          )\r\n          : \r\n          ( \r\n            <React.Fragment>\r\n              <CardContent>\r\n                <Typography className={classes.title} color=\"textSecondary\" variant=\"overline\" gutterBottom>\r\n                  Current Location\r\n                </Typography>\r\n                \r\n                <Typography variant=\"h6\" component=\"h2\">\r\n                  { road }\r\n                </Typography>\r\n                \r\n                <Typography variant=\"h6\" component=\"h2\">\r\n                  { city_district }\r\n                </Typography>\r\n                <Typography variant=\"h6\" component=\"h2\">\r\n                  { `${city}, ${country}`}\r\n                </Typography>\r\n                \r\n                <Typography color=\"textSecondary\" variant=\"h5\" component=\"h2\">\r\n                  { postcode }\r\n                </Typography>\r\n              </CardContent>\r\n              {/* <CardActions>\r\n                <Button size=\"small\">Learn More</Button>\r\n              </CardActions> */}\r\n          </React.Fragment>\r\n          )\r\n        }\r\n    </Card>\r\n  );\r\n}\r\n\r\nPlaceInfoCardComponent.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PlaceInfoCardComponent);","import React from 'react';\r\nimport MapComponent from './MapComponent';\r\nimport LocationMapComponent from './LocationMapComponent';\r\nimport BaseScreenComponent from '../BaseScreenComponent';\r\n\r\nimport PlaceInfoCardComponent from './PlaceInfoCardComponent';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = {\r\n  root: {\r\n    width: '100%'\r\n  },\r\n  map: {\r\n    width: '100%',\r\n    position: 'fixed',\r\n    top: '56px',\r\n  },\r\n  placeInfo: {\r\n    position: 'fixed',\r\n    bottom: '61px',\r\n    width: '100%',\r\n  }\r\n};\r\n\r\n\r\nclass NavigationScreenComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isSearchActive: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.debug(\"Mounted\");\r\n    const { onLocationRequest } = this.props;\r\n\r\n    onLocationRequest && onLocationRequest();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.debug(\"Unmounting\");\r\n    const { onStopLocationWatch } = this.props;\r\n\r\n    onStopLocationWatch && onStopLocationWatch();\r\n  }\r\n\r\n  onSearchbarEnable = (searchBar) => {\r\n    this.searchBar = searchBar;\r\n\r\n    this.setState({\r\n      isSearchActive: true,\r\n    });\r\n  }\r\n\r\n  onSearchbarDisable = (searchBar) => {\r\n    this.searchBar = undefined;\r\n\r\n    this.setState({\r\n      isSearchActive: false,\r\n    });\r\n  }\r\n\r\n  onBlur = (event) => {\r\n    if (this.searchBar !== undefined) {\r\n      this.searchBar.toggle();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes, gpsLocation, placeInfo, isPlaceInfoLoading } = this.props;\r\n\r\n    console.debug(\"IS LOADING\", isPlaceInfoLoading);\r\n    return (\r\n      <Grid container className={classes.root} spacing={0}>\r\n        <Grid item xs={12}>\r\n          <LocationMapComponent gpsLocation={gpsLocation} isPlaceInfoLoading={isPlaceInfoLoading} />\r\n          {\r\n            placeInfo && (\r\n              <div className={classes.placeInfo}>\r\n                <PlaceInfoCardComponent placeInfo={placeInfo} isPlaceInfoLoading={isPlaceInfoLoading} />\r\n              </div>\r\n            )\r\n          }\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default withStyles(styles)(NavigationScreenComponent);","import NavigationScreenComponent from './NavigationScreenComponent';\r\n\r\nexport default NavigationScreenComponent;","import React from 'react';\r\nimport { Iterable } from 'immutable';\r\n\r\nconst HOCtoJS = WrappedComponent => wrappedComponentProps => {\r\n  const KEY = 0;\r\n  const VALUE = 1;\r\n\r\n  const propsJS = Object.entries(wrappedComponentProps).reduce(\r\n    (newProps, wrappedComponentProp) => {\r\n      newProps[wrappedComponentProp[KEY]] = Iterable.isIterable(\r\n        wrappedComponentProp[VALUE]\r\n      )\r\n        ? wrappedComponentProp[VALUE].toJS()\r\n        : wrappedComponentProp[VALUE]\r\n      return newProps\r\n    },\r\n    {}\r\n  )\r\n\r\n  return <WrappedComponent {...propsJS} />\r\n}\r\n\r\nexport default HOCtoJS;","import { connect } from 'react-redux'\r\n\r\nimport {\r\n  makeSelectGlobalLocation,\r\n  makeSelectGlobalPrevLocation,\r\n} from '../selectors/globals';\r\n\r\nimport {\r\n  makeSelectFileModelByMeta,\r\n} from '../selectors/file';\r\n\r\nimport {\r\n  makeSelectFormModelByMeta,\r\n} from '../selectors/form';\r\n\r\nimport {\r\n  makeSelectEventStatusModelFieldByMeta,\r\n} from '../selectors/eventStatus';\r\n\r\nimport {\r\n  appLocationRequest,\r\n  appLocationWatchClear,\r\n} from '../actions/globals';\r\n\r\nimport NavigationScreenComponent from '../components/NavigationScreenComponent';\r\n\r\nimport HOCToJS from '../components/HOCToJS';\r\n\r\nconst makeMapStateToProps = () => {\r\n  const getLocation = makeSelectGlobalLocation();\r\n  const getPrevLocation = makeSelectGlobalPrevLocation();\r\n  const getFileModel = makeSelectFileModelByMeta();\r\n  const getFormModel = makeSelectFormModelByMeta();\r\n  const getEventStatusField = makeSelectEventStatusModelFieldByMeta();\r\n\r\n  const mapStateToProps = (state, ownProps) => {\r\n      const location = getLocation(state);\r\n      const prevLocation = getPrevLocation(state);\r\n      const fileModel = getFileModel(state)('placeInfo');\r\n      const formModel = getFormModel(state)('placeInfo');\r\n      const isPlaceInfoLoading = getEventStatusField(state)('placeInfo', 'isLoading') || false;\r\n\r\n      console.debug(\"FILE MODEL\", fileModel && fileModel.toJS());\r\n      console.debug(\"FORM MODEL\", formModel && formModel.toJS());\r\n      console.debug(\"Location\", location && location.toJS());\r\n\r\n      return {\r\n          gpsLocation: location,\r\n          placeInfo: formModel,\r\n          isPlaceInfoLoading,\r\n          ...ownProps,\r\n      };\r\n  };\r\n\r\n  return mapStateToProps\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onLocationRequest: () => {\r\n      dispatch(appLocationRequest());\r\n    },\r\n    onStopLocationWatch: () => {\r\n      dispatch(appLocationWatchClear());\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(makeMapStateToProps, mapDispatchToProps)(HOCToJS(NavigationScreenComponent));","/**\r\n * form action constants\r\n */\r\nexport const FORM_MODEL_CHANGE = 'FORM_MODEL_CHANGE';\r\nexport const FORM_MODEL_FIELD_CHANGE = 'FORM_MODEL_FIELD_CHANGE';\r\nexport const FORM_MODEL_SAVE = 'FORM_MODEL_SAVE';","import {\r\n    FORM_MODEL_CHANGE,\r\n    FORM_MODEL_SAVE,\r\n    FORM_MODEL_FIELD_CHANGE,\r\n} from '../constants/form';\r\n\r\n\r\nexport const formModelChange = ({ meta, overrideModel, fromSaga = false, }) => {\r\n    return {\r\n        meta,\r\n        overrideModel,\r\n        fromSaga,\r\n        type: FORM_MODEL_CHANGE,\r\n    };\r\n}\r\n\r\nexport const formModelFieldChange = ({ meta, field, value, fromSaga = false, }) => {\r\n    return {\r\n        meta,\r\n        field,\r\n        value,\r\n        fromSaga,\r\n        type: FORM_MODEL_FIELD_CHANGE,\r\n    };\r\n}\r\n\r\nexport const formModelSave = ({ meta }) => {\r\n    return {\r\n        meta,\r\n        type: FORM_MODEL_SAVE,\r\n    };\r\n};","import CurrencyScreenComponent from './CurrencyScreenComponent';\r\n\r\nexport default CurrencyScreenComponent;","import React from 'react';\r\nimport {\r\n    Page,\r\n    PageContent,\r\n    Navbar,\r\n    NavLeft,\r\n    NavTitle,\r\n    NavRight,\r\n    Link,\r\n    Toolbar,\r\n    Block,\r\n    BlockTitle,\r\n    Label,\r\n    Input,\r\n    List,\r\n    ListItem,\r\n    Icon,\r\n    F7List,\r\n    Button,\r\n    Popup,\r\n    Subnavbar,\r\n    ListButton,\r\n    Searchbar,\r\n    Row,\r\n    Col,\r\n} from 'framework7-react';\r\n\r\nimport BaseScreenComponent from '../BaseScreenComponent';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\n// export default ({ onChange, formModel = {} }) => {\r\n  \r\n// }\r\n\r\nclass CurrencyScreenComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      popupOpened: false,\r\n      popupField: '',\r\n    }\r\n  }\r\n\r\n  openPopUp = ({ field }) => {\r\n    this.setState({ popupOpened : true, popupField: field })\r\n  }\r\n\r\n  closePopUp = () => {\r\n    this.setState({ popupOpened : false, popupField: '' })\r\n  }\r\n\r\n  onListItemSelected = (value) => {\r\n    const { onChange } = this.props;\r\n\r\n    onChange && onChange(this.state.popupField, value);\r\n  }\r\n\r\n  render() {\r\n    const { onChange, formModel = {} } = this.props;\r\n    \r\n    return (\r\n      <h1>Currency</h1>\r\n    );\r\n    \r\n    return (\r\n      <BaseScreenComponent title=\"Converter\">\r\n          <div className={styles.CurrencyContainer}>   \r\n              <Input\r\n                className={styles.CurrencyContainer_Input}\r\n                name=\"sourceValue\"\r\n                type=\"number\"\r\n                placeholder=\"Enter amount\"\r\n                value={formModel['sourceValue'] || ''}\r\n                onChange={(e) => onChange(e.target.name, e.target.value)}\r\n              />\r\n              <div className={styles.CurrencyButton}>\r\n                <Button fill round big onClick={() => { this.openPopUp({field: 'sourceCurrency' })}}>\r\n                  { formModel['sourceCurrency'] || `Select`}\r\n                  <Icon material=\"arrow_drop_down\"></Icon>\r\n                </Button>\r\n            </div>\r\n          </div>\r\n          <div className={styles.CurrencyContainer}>   \r\n              <Input\r\n                className={styles.CurrencyContainer_Input}\r\n                name=\"destValue\"\r\n                type=\"number\"\r\n                placeholder=\"Enter amount\"\r\n                value={formModel['destValue'] || 0}\r\n                onChange={(e) => onChange(e.target.name, e.target.value)}\r\n                readonly\r\n                disabled\r\n              />\r\n              <div className={styles.CurrencyButton}>\r\n                <Button fill round big onClick={() => { this.openPopUp({field: 'destCurrency' })}}>\r\n                  { formModel['destCurrency'] || `Select`}\r\n                  <Icon material=\"arrow_drop_down\"></Icon>\r\n                </Button>\r\n            </div>\r\n          </div>\r\n          <Popup opened={this.state.popupOpened} onPopupClosed={() => this.setState({popupOpened : false})}>\r\n            <Page withSubnavbar>\r\n              <Navbar title=\"Searchbar\">\r\n                <Subnavbar inner={false}>\r\n                  <Searchbar\r\n                    searchContainer=\".search-list\"\r\n                    searchIn=\".item-title\"\r\n                    backdrop\r\n                    backdropEl=\".search-list\"\r\n                  ></Searchbar>\r\n                </Subnavbar>\r\n                <NavRight>\r\n                  <Link popupClose>Close</Link>\r\n                </NavRight>\r\n              </Navbar>\r\n\r\n              <List className=\"searchbar-not-found\">\r\n                <ListItem title=\"Nothing found\" />\r\n              </List>\r\n              <List className=\"search-list searchbar-found currency-list\">\r\n                <ListButton onClick={() => { this.onListItemSelected('USD'); this.closePopUp(); }} title=\"(USD) United States Dollar\" />\r\n                <ListButton onClick={() => { this.onListItemSelected('EUR'); this.closePopUp(); }} title=\"(EUR) Euro\" />\r\n              </List>\r\n            </Page>\r\n          </Popup>\r\n          {/* <List noHairlinesMd>\r\n            <ListItem>\r\n              <Label>\r\n                Amount\r\n              </Label>\r\n              <Input\r\n                name=\"sourceValue\"\r\n                type=\"number\"\r\n                placeholder=\"Enter amount\"\r\n                value={formModel['sourceValue'] || ''}\r\n                onChange={(e) => onChange(e.target.name, e.target.value)}\r\n              />\r\n            </ListItem>\r\n            <ListItem>\r\n              <Label>\r\n                Currency\r\n              </Label>\r\n              <Input\r\n                name=\"sourceCurrency\"\r\n                type=\"select\"\r\n                placeholder=\"Please choose...\"\r\n                defaultValue={formModel['sourceCurrency'] || ''}\r\n                onChange={(e) => onChange(e.target.name, e.target.value)}\r\n              >\r\n                <option value=\"\">Please choose an option...</option>\r\n                <option value=\"USD\">(USD) United States Dollar</option>\r\n                <option value=\"EUR\">(EUR) Euro</option>\r\n              </Input>\r\n            </ListItem>\r\n            <ListItem>\r\n              <Label>\r\n                Amount\r\n              </Label>\r\n              <Input\r\n                name=\"destValue\"\r\n                type=\"number\"\r\n                placeholder=\"Enter amount\"\r\n                value={formModel['destValue'] || ''}\r\n                onChange={(e) => onChange(e.target.name, e.target.value)}\r\n              />\r\n            </ListItem>\r\n            <ListItem>\r\n              <Label>\r\n                Currency\r\n              </Label>\r\n              <Input\r\n                name=\"destCurrency\"\r\n                type=\"select\"\r\n                placeholder=\"Please choose...\"\r\n                defaultValue={formModel['destCurrency'] || ''}\r\n                onChange={(e) => onChange(e.target.name, e.target.value)}\r\n              >\r\n                <option value=\"\">Please choose an option...</option>\r\n                <option value=\"USD\">(USD) United States Dollar</option>\r\n                <option value=\"EUR\">(EUR) Euro</option>\r\n              </Input>\r\n            </ListItem>\r\n          </List> */}\r\n      </BaseScreenComponent>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CurrencyScreenComponent;","import { connect } from 'react-redux'\r\n\r\nimport {\r\n    formModelFieldChange,\r\n} from '../actions/form';\r\n\r\nimport {\r\n    makeSelectFormModelByMeta,\r\n} from '../selectors/form';\r\n\r\nimport HOCToJS from '../components/HOCToJS';\r\nimport CurrencyScreenComponent from '../components/CurrencyScreenComponent';\r\n\r\nconst makeMapStateToProps = () => {\r\n    const getFormModel = makeSelectFormModelByMeta()\r\n\r\n    const mapStateToProps = (state, ownProps) => {\r\n        const formModel = getFormModel(state)('currency');\r\n        console.debug(\"FORM MODEL\", formModel && formModel.toJS());\r\n\r\n        return {\r\n            formModel,\r\n            ...ownProps,\r\n        };\r\n    };\r\n\r\n    return mapStateToProps\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onChange: (field, value) => dispatch(formModelFieldChange({\r\n            meta: 'currency',\r\n            field,\r\n            value,\r\n        })),\r\n    };\r\n};\r\n\r\nexport default connect(makeMapStateToProps, mapDispatchToProps)(HOCToJS(CurrencyScreenComponent));","import React from 'react';\r\nimport {\r\n    Page,\r\n    Navbar,\r\n    NavLeft,\r\n    NavTitle,\r\n    NavRight,\r\n    Link,\r\n    Toolbar,\r\n    Block,\r\n} from 'framework7-react';\r\n\r\nimport BaseScreenComponent from '../BaseScreenComponent';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n    width: 200,\r\n  },\r\n  dense: {\r\n    marginTop: 19,\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n});\r\n\r\n\r\nconst TextCMP = withStyles(styles)((props) => {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <div>\r\n      <TextField\r\n        id=\"standard-name\"\r\n        label=\"Name\"\r\n        fullWidth\r\n        // className={classes.textField}\r\n        // value={this.state.name}\r\n        // onChange={this.handleChange('name')}\r\n        margin=\"normal\"\r\n      />\r\n    </div>\r\n  );\r\n})\r\n\r\nclass WeatherScreenComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <TextCMP />\r\n    );\r\n    // return (\r\n    //   <BaseScreenComponent title=\"Weather\">\r\n    //     <Block strong>\r\n    //       <p>Weather HERE</p>\r\n    //     </Block>\r\n    //   </BaseScreenComponent>\r\n    // );\r\n  }\r\n}\r\n\r\nexport default WeatherScreenComponent;","import WeatherScreenComponent from './WeatherScreenComponent';\r\n\r\nexport default WeatherScreenComponent;","import { connect } from 'react-redux'\r\n\r\nimport {\r\n    fileModelFieldChange,\r\n} from '../actions/fileActions';\r\n\r\nimport {\r\n    makeSelectFileModelByMeta,\r\n} from '../selectors/file';\r\n\r\nimport HOCToJS from '../components/HOCToJS';\r\nimport WeatherScreenComponent from '../components/WeatherScreenComponent';\r\n\r\nconst makeMapStateToProps = () => {\r\n    const getFileModel = makeSelectFileModelByMeta()\r\n\r\n    const mapStateToProps = (state, ownProps) => {\r\n        const fileModel = getFileModel(state)('persistent');\r\n        console.debug(\"FILE MODEL\", fileModel && fileModel.toJS());\r\n\r\n        return {\r\n            fileModel,\r\n            ...ownProps,\r\n        };\r\n    };\r\n\r\n    return mapStateToProps\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // onChange: (field, value) => dispatch(formModelFieldChange({\r\n        //     meta: 'currency',\r\n        //     field,\r\n        //     value,\r\n        // })),\r\n    };\r\n};\r\n\r\nexport default connect(makeMapStateToProps, mapDispatchToProps)(HOCToJS(WeatherScreenComponent));","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n};\r\n\r\nconst AppBarComponent = (props) => {\r\n  const { classes, routes, location } = props;\r\n\r\n  const route = routes[location.pathname];\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n            { route.title }\r\n          </Typography>\r\n          <IconButton color=\"inherit\" aria-label=\"Open drawer\">\r\n            <SettingsIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nAppBarComponent.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRouter(withStyles(styles)(AppBarComponent));","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\n\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nconst styles = {\r\n  root: {\r\n    width: '100%',\r\n    position: 'fixed',\r\n    bottom: '0',\r\n  },\r\n};\r\n\r\nclass SimpleBottomNavigation extends React.Component {\r\n    state = {\r\n        value: 0,\r\n    };\r\n\r\n    handleChange = (event, value) => {\r\n        const { routes, history } = this.props;\r\n        const keys = Object.keys(routes);\r\n\r\n        this.setState({\r\n            value\r\n        }, () => {\r\n            history.push(keys[value]);\r\n        });\r\n    }\r\n\r\n    renderRoutes = () => {\r\n        const { routes } = this.props;\r\n\r\n        return Object.keys(routes).map(key => {\r\n            const route = routes[key];\r\n\r\n            return (\r\n                <BottomNavigationAction label={route.title} icon={<route.icon />} />\r\n            )\r\n        });\r\n    }\r\n\r\n    render() {\r\n    const { classes, routes } = this.props;\r\n    const { value } = this.state;\r\n\r\n    return (\r\n        <BottomNavigation\r\n        value={value}\r\n        onChange={this.handleChange}\r\n        showLabels\r\n        className={classes.root}\r\n        >\r\n        {\r\n            this.renderRoutes()\r\n        }\r\n        {/* <BottomNavigationAction label=\"Recents\" icon={<RestoreIcon />} />\r\n        <BottomNavigationAction label=\"Favorites\" icon={<FavoriteIcon />} />\r\n        <BottomNavigationAction label=\"Nearby\" icon={<LocationOnIcon />} /> */}\r\n        </BottomNavigation>\r\n    );\r\n    }\r\n}\r\n\r\nSimpleBottomNavigation.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRouter(withStyles(styles)(SimpleBottomNavigation));","import PlaceIcon from '@material-ui/icons/Place';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport CloudIcon from '@material-ui/icons/Cloud';\r\n\r\nconst routes = {\r\n    \"/\": {\r\n      title: 'Place',\r\n      icon: PlaceIcon,\r\n    },\r\n    \"/currency\": {\r\n      title: 'Currency',\r\n      icon: AttachMoneyIcon,\r\n    },\r\n    \"/weather\": {\r\n      title: 'Weather',\r\n      icon: CloudIcon,\r\n    },\r\n}\r\n\r\nexport default routes;","import {\r\n    takeLatest,\r\n    call,\r\n    select,\r\n    put,\r\n    delay,\r\n} from 'redux-saga/effects'\r\n\r\nimport {\r\n    FORM_MODEL_FIELD_CHANGE\r\n} from '../constants/form';\r\n\r\nimport {\r\n    formModelFieldChange,\r\n} from '../actions/form';\r\n\r\nimport {\r\n    makeSelectFormModelByMeta,\r\n} from '../selectors/form';\r\n\r\nimport ApiHelper from '../utils/api';\r\n\r\nfunction* currencySaga() {\r\n  yield takeLatest(FORM_MODEL_FIELD_CHANGE, handleFieldChange);\r\n}\r\n\r\nfunction* handleFieldChange(action) {\r\n    const { meta, field, fromSaga } = action;\r\n\r\n    if(meta === 'currency' && !fromSaga) {\r\n        try {\r\n            const getFormModel = makeSelectFormModelByMeta();\r\n            const formModelIM = yield select(state => getFormModel(state)('currency'));\r\n            const formModel = !formModelIM ? {} : formModelIM.toJS();\r\n            console.debug(\"CURRENCY SAGA MODEL\", formModel);\r\n\r\n            if (!formModel || !formModel.sourceCurrency || !formModel.destCurrency)\r\n                return;\r\n\r\n            const eventFromSrc = field === 'sourceValue' || field === 'sourceCurrency';\r\n\r\n            if(eventFromSrc && (!formModel.sourceValue || !formModel.sourceCurrency || !formModel.destCurrency))\r\n                return;\r\n            if(!eventFromSrc && (!formModel.sourceCurrency || !formModel.destCurrency))\r\n                return;\r\n            // if(!eventFromSrc && (!formModel.destValue || !formModel.sourceCurrency || !formModel.destCurrency))\r\n            //     return;\r\n\r\n            // yield call(ApiHelper.getRates, {\r\n            //     from: eventFromSrc ? formModel.sourceCurrency : formModel.destCurrency,\r\n            //     to: eventFromSrc ? formModel.destCurrency : formModel.sourceCurrency,\r\n            //     onSuccess: (rates) => {\r\n            //         console.debug(\"RATES\", rates);\r\n            //         if (eventFromSrc) {\r\n            //             const converted = formModel.sourceValue * rates;\r\n\r\n            //             yield put(formModelFieldChange({\r\n            //                 meta: 'currency',\r\n            //                 field: 'destValue',\r\n            //                 value: converted,\r\n            //             }));\r\n            //         } else {\r\n            //             const converted = formModel.destValue * rates;\r\n\r\n            //             yield put(formModelFieldChange({\r\n            //                 meta: 'currency',\r\n            //                 field: 'sourceValue',\r\n            //                 value: converted,\r\n            //             }));\r\n            //         }\r\n            //     },\r\n            // });\r\n            const rates = yield call(ApiHelper.getRates, {\r\n                from: eventFromSrc ? formModel.sourceCurrency : formModel.destCurrency,\r\n                to: eventFromSrc ? formModel.destCurrency : formModel.sourceCurrency,\r\n            });\r\n\r\n            // console.debug(\"RATES\", rates);\r\n            const converted = (formModel.sourceValue * rates).toFixed(2);\r\n\r\n            yield put(formModelFieldChange({\r\n                meta: 'currency',\r\n                field: 'destValue',\r\n                value: converted,\r\n                fromSaga: true,\r\n            }));\r\n            // if (eventFromSrc) {\r\n            //     const converted = (formModel.sourceValue * rates).toFixed(2);\r\n\r\n            //     yield put(formModelFieldChange({\r\n            //         meta: 'currency',\r\n            //         field: 'destValue',\r\n            //         value: converted,\r\n            //         fromSaga: true,\r\n            //     }));\r\n            // } else {\r\n            //     const converted = (formModel.destValue * rates).toFixed(2);\r\n\r\n            //     yield put(formModelFieldChange({\r\n            //         meta: 'currency',\r\n            //         field: 'sourceValue',\r\n            //         value: converted,\r\n            //         fromSaga: true,\r\n            //     }));\r\n            // }\r\n\r\n        } catch(error) {\r\n            console.error(\"Currency Saga Error\", error);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default currencySaga;","import {\r\n    EVENT_STATUS_MODEL_CHANGE,\r\n    EVENT_STATUS_MODEL_FIELD_CHANGE,\r\n} from '../constants/eventStatus';\r\n\r\n\r\nexport const eventStatusModelChange = ({ meta, overrideModel, fromSaga = false }) => {\r\n    return {\r\n        meta,\r\n        type: EVENT_STATUS_MODEL_CHANGE,\r\n        overrideModel,\r\n        fromSaga,\r\n    }\r\n};\r\n\r\nexport const eventStatusModelFieldChange = ({ meta, field, value, fromSaga = false }) => {\r\n    return {\r\n        meta,\r\n        type: EVENT_STATUS_MODEL_FIELD_CHANGE,\r\n        field,\r\n        value,\r\n        fromSaga,\r\n    }\r\n};\r\n\r\n","/**\r\n * \r\n * event satus action constants\r\n */\r\nexport const EVENT_STATUS_MODEL_CHANGE = 'EVENT_STATUS_MODEL_CHANGE';\r\nexport const EVENT_STATUS_MODEL_FIELD_CHANGE = 'EVENT_STATUS_MODEL_FIELD_CHANGE';","\r\nimport { \r\n    channel,\r\n    delay, } from 'redux-saga';\r\nimport {\r\n    all,\r\n    take,\r\n    takeLatest,\r\n    call,\r\n    select,\r\n    put,\r\n} from 'redux-saga/effects'\r\n\r\nimport {\r\n    APP_DEVICE_READY,\r\n    APP_LOCATION_REQUEST\r\n} from '../constants/globals';\r\n\r\nimport {\r\n    fileModelChange,\r\n    fileModelFieldChange,\r\n} from '../actions/fileActions';\r\n\r\nimport {\r\n    appLocationChange,\r\n    appLocationWatchChange,\r\n} from '../actions/globals';\r\n\r\nimport {\r\n    formModelChange,\r\n} from '../actions/form';\r\n\r\nimport {\r\n    eventStatusModelFieldChange,\r\n} from '../actions/eventStatusActions';\r\n\r\nimport {\r\n    FORM_MODEL_CHANGE,\r\n} from '../constants/form';\r\n\r\nimport {\r\n    APP_LOCATION_WATCH_CLEAR,\r\n} from '../constants/globals';\r\n\r\nimport {\r\n    makeSelectGlobalLocationWatchId,\r\n} from '../selectors/globals';\r\n\r\nimport FileHelper from '../utils/files';\r\nimport ApiHelper from '../utils/api';\r\nimport Helpers from '../utils/helpers';\r\n\r\nconst globalChannel = channel();\r\n\r\nconst getGlobalLocationWatchId = makeSelectGlobalLocationWatchId();\r\n\r\nfunction* globalSaga() {\r\n    yield all([\r\n        watchDeviceReadySaga(),\r\n        watchGlobalChannel(),\r\n        watchDeviceLocationRequestSaga(),\r\n        watchDeviceLocationWatchClearSaga(),\r\n    ]);\r\n}\r\n\r\nfunction* watchDeviceReadySaga() {\r\n    yield takeLatest(APP_DEVICE_READY, handleAppDeviceReady);\r\n}\r\n\r\nfunction* watchDeviceLocationRequestSaga() {\r\n    yield takeLatest(APP_LOCATION_REQUEST, handleDeviceLocationRequest);\r\n}\r\n\r\nfunction* watchDeviceLocationWatchClearSaga() {\r\n    yield takeLatest(APP_LOCATION_WATCH_CLEAR, handleDeviceLocationWatchClear);\r\n}\r\n\r\nfunction* handleAppDeviceReady(action) {\r\n    try {\r\n\r\n        console.debug(\"Action\", action);\r\n    \r\n        // FileHelper.requestFileSystem({\r\n        //     fileName: 'globals.json',\r\n        //     onSuccess: (fileEntry) => {\r\n        //         console.log(\"FILE ENTRY\", fileEntry);\r\n        //     },\r\n        // });\r\n\r\n        // yield put(eventStatusModelFieldChange({\r\n        //     meta: 'placeInfo',\r\n        //     field: 'isLoading',\r\n        //     value: true,\r\n        //     fromSaga: true,\r\n        // }));\r\n\r\n        // yield call(Helpers.getCurrentLatLng, ({ onSuccess: ({ lat, lng }) => {\r\n        //     globalChannel.put(appLocationChange({ lat, lng }));\r\n\r\n        //     ApiHelper.getLocationDetails({ lat, lng, onSuccess: (locData) => {\r\n        //         globalChannel.put(formModelChange({ meta: 'placeInfo', overrideModel: { ...locData}, fromSaga: true }));\r\n        //     }});\r\n        // }}));\r\n\r\n        // yield put(eventStatusModelFieldChange({\r\n        //     meta: 'placeInfo',\r\n        //     field: 'isLoading',\r\n        //     value: false,\r\n        //     fromSaga: true,\r\n        // }));\r\n\r\n    } catch (e) {\r\n        console.error(\"handleAppDeviceReady error \", e);\r\n    }\r\n}\r\n\r\n\r\nfunction* handleDeviceLocationRequest(action) {\r\n    yield put(eventStatusModelFieldChange({\r\n        meta: 'placeInfo',\r\n        field: 'isLoading',\r\n        value: true,\r\n        fromSaga: true,\r\n    }));\r\n\r\n    const watchId = yield call(Helpers.watchLocation, ({ onSuccess: ({ lat, lng }) => {\r\n        globalChannel.put(appLocationChange({ lat, lng }));\r\n\r\n        ApiHelper.getLocationDetails({ lat, lng, onSuccess: (locData) => {\r\n            globalChannel.put(formModelChange({ meta: 'placeInfo', overrideModel: { ...locData}, fromSaga: true }));\r\n        }});\r\n    }}));\r\n\r\n    yield put(appLocationWatchChange({ watchId }));\r\n}\r\n\r\nfunction* handleDeviceLocationWatchClear(action) {\r\n    const watchId = yield select(state => getGlobalLocationWatchId(state));\r\n\r\n    if (watchId !== undefined && watchId !== null) {\r\n        Helpers.stopLocationWatch({ watchId });\r\n    }\r\n}\r\n\r\n\r\nfunction* watchGlobalChannel() {\r\n    while(true) {\r\n        const action = yield take(globalChannel);\r\n        const { type, meta, fromSaga } = action;\r\n        yield put(action);\r\n\r\n        if (type === FORM_MODEL_CHANGE && meta === 'placeInfo' && fromSaga) {\r\n            // yield call(delay, 2000);\r\n            yield put(eventStatusModelFieldChange({\r\n                meta: 'placeInfo',\r\n                field: 'isLoading',\r\n                value: false,\r\n                fromSaga: true,\r\n            }));\r\n        }\r\n    };\r\n}\r\n\r\n\r\nexport default globalSaga;","import { all } from 'redux-saga/effects';\r\nimport currencySaga from './currencySaga';\r\nimport globalSaga from './globalSaga';\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        globalSaga(),\r\n        currencySaga(),\r\n    ]);\r\n}","/**\r\n * externals api reducer\r\n */\r\nimport {\r\n    APP_LOCATION_CHANGE,\r\n    APP_LOCATION_WATCH_CHANGE,\r\n    APP_LOCATION_WATCH_CLEAR,\r\n} from '../constants/globals';\r\n\r\n\r\nimport { fromJS } from 'immutable';\r\n\r\nconst initialState = fromJS({\r\n    location: {\r\n        lat: 53.3498,\r\n        lng: 6.2603,\r\n    },\r\n    prevLocation: {\r\n        lat: 53.3498,\r\n        lng: 6.2603,\r\n    },\r\n    locationWatchId: null,\r\n    test: 'test',\r\n});\r\n\r\n\r\nconst globalReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case APP_LOCATION_CHANGE:\r\n            const oldLat = state.getIn['location', 'lat'];\r\n            const oldLng = state.getIn['location', 'lng'];\r\n\r\n            return state\r\n                .setIn(['location', 'lat'], action.lat)\r\n                .setIn(['location', 'lng'], action.lng)\r\n                .setIn(['prevLocation', 'lat'], oldLat)\r\n                .setIn(['prevLocation', 'lng'], oldLng);\r\n        case APP_LOCATION_WATCH_CHANGE:\r\n            return state.setIn(['locationWatchId'], action.watchId);\r\n        case APP_LOCATION_WATCH_CLEAR:\r\n            return state.setIn(['locationWatchId'], null);\r\n        default:\r\n            return state;\r\n    }\r\n\r\n    return state;\r\n};\r\n\r\nexport default globalReducer;","/**\r\n * externals api reducer\r\n */\r\nimport {\r\n    EXTERNALS_REQUEST,\r\n    EXTERNALS_RECEIVE,\r\n} from '../constants/externals';\r\n\r\n\r\nimport { fromJS } from 'immutable';\r\n\r\nconst reducer = (state, action) => {\r\n\r\n};\r\n\r\n\r\nconst externalsReducer = (state = fromJS({}), action) => {\r\n    let newState = { ...state };\r\n    switch(action.type) {\r\n        case EXTERNALS_REQUEST:\r\n            break;\r\n\r\n        case EXTERNALS_RECEIVE:\r\n            break;\r\n\r\n        default:\r\n            return newState;\r\n    }\r\n\r\n    return newState;\r\n};\r\n\r\nexport default externalsReducer;","/**\r\n * external api action constants\r\n */\r\nexport const EXTERNALS_REQUEST = 'EXTERNALS_REQUEST';\r\nexport const EXTERNALS_RECEIVE = 'EXTERNALS_RECEIVE';","/**\r\n * form reducer\r\n */\r\nimport {\r\n    FORM_MODEL_CHANGE,\r\n    FORM_MODEL_FIELD_CHANGE,\r\n} from '../constants/form';\r\n\r\nimport { fromJS } from 'immutable';\r\n\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case FORM_MODEL_CHANGE:\r\n            return state.set('model', fromJS({ ...action.overrideModel }));    \r\n            \r\n        case FORM_MODEL_FIELD_CHANGE:\r\n            return state.setIn(['model', action.field], action.value);\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\n\r\nconst formReducer = (state = fromJS({}) , action = {}) => {\r\n    if (action.meta !== undefined && action.meta) {\r\n        const form = state.get(action.meta);\r\n        \r\n        if (!form) {\r\n            const newForm = fromJS({\r\n                model: {}\r\n            });\r\n\r\n            return state.set(action.meta, reducer(newForm, action));\r\n        } else {\r\n            return state.set(action.meta, reducer(form, action));\r\n        }\r\n\r\n    }\r\n\r\n    return state;\r\n};\r\n\r\n\r\n\r\nexport default formReducer;","/**\r\n * form reducer\r\n */\r\nimport {\r\n    FILE_MODEL_CHANGE,\r\n    FILE_MODEL_FIELD_CHANGE,\r\n} from '../constants/file';\r\n\r\nimport { fromJS } from 'immutable';\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case FILE_MODEL_CHANGE:\r\n            return state.set('model', fromJS({ ...action.overrideModel }));    \r\n            \r\n        case FILE_MODEL_FIELD_CHANGE:\r\n            return state.setIn(['model', action.field], action.value);\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\n\r\nconst fileReducer = (state = fromJS({}) , action = {}) => {\r\n    if (action.meta !== undefined && action.meta) {\r\n\r\n        const file = state.get(action.meta);\r\n        \r\n        if (!file) {\r\n            const newFile = fromJS({\r\n                model: {}\r\n            });\r\n\r\n            return state.set(action.meta, reducer(newFile, action));\r\n        } else {\r\n            return state.set(action.meta, reducer(file, action));\r\n        }\r\n\r\n    }\r\n\r\n    return state;\r\n};\r\n\r\n\r\n\r\nexport default fileReducer;","/**\r\n * form action constants\r\n */\r\nexport const FILE_MODEL_CHANGE = 'FILE_MODEL_CHANGE';\r\nexport const FILE_MODEL_FIELD_CHANGE = 'FILE_MODEL_FIELD_CHANGE';\r\nexport const FILE_MODEL_SAVE = 'FILE_MODEL_SAVE';\r\nexport const FILE_MODEL_REQUEST = 'FILE_MODEL_REQUEST';\r\nexport const FILE_MODEL_RECEIVE = 'FILE_MODEL_RECEIVE';","/**\r\n * eventStatus reducer\r\n */\r\nimport {\r\n    EVENT_STATUS_MODEL_CHANGE,\r\n    EVENT_STATUS_MODEL_FIELD_CHANGE,\r\n} from '../constants/eventStatus';\r\n\r\nimport { fromJS } from 'immutable';\r\n\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case EVENT_STATUS_MODEL_CHANGE:\r\n            return state.set('model', fromJS({ ...action.overrideModel }));    \r\n            \r\n        case EVENT_STATUS_MODEL_FIELD_CHANGE:\r\n            return state.setIn(['model', action.field], action.value);\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\n\r\nconst eventStatusReducer = (state = fromJS({}) , action = {}) => {\r\n    if (action.meta !== undefined && action.meta) {\r\n        const eventStatus = state.get(action.meta);\r\n        \r\n        if (!eventStatus) {\r\n            const newEventStatus = fromJS({\r\n                model: {}\r\n            });\r\n\r\n            return state.set(action.meta, reducer(newEventStatus, action));\r\n        } else {\r\n            return state.set(action.meta, reducer(eventStatus, action));\r\n        }\r\n\r\n    }\r\n\r\n    return state;\r\n};\r\n\r\n\r\n\r\nexport default eventStatusReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport {\r\n  combineReducers\r\n} from 'redux-immutable';\r\n\r\nimport Immutable from 'immutable';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport rootSaga from './sagas';\r\nimport globalReducer from './reducers/globalReducer';\r\nimport externalsReducer from './reducers/externalsReducer';\r\nimport formReducer from './reducers/formReducer';\r\nimport fileReducer from './reducers/fileReducer';\r\nimport eventStatusReducer from './reducers/eventStatusReducer';\r\n\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\nconst composeEnhancers = composeWithDevTools({\r\n  serialize: {\r\n    immutable: Immutable,\r\n  }\r\n})\r\n\r\nexport const store = createStore(\r\n  combineReducers({\r\n    globals: globalReducer,\r\n    externals: externalsReducer,\r\n    form: formReducer,\r\n    file: fileReducer,\r\n    eventStatus: eventStatusReducer,\r\n  }),\r\n  Immutable.Map(),\r\n  composeEnhancers(\r\n    applyMiddleware(sagaMiddleware),\r\n  )\r\n);\r\n\r\n\r\n// syncFramework7WithStore(store, stateKernel);\r\n\r\n\r\nsagaMiddleware.run(rootSaga);","import React from 'react';\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router, HashRouter, Route, Switch } from \"react-router-dom\";\n\nimport NavigationScreenContainer from './screens/NavigationScreenContainer';\nimport CurrencyScreenContainer from './screens/CurrencyScreenContainer';\nimport WeatherScreenContainer from './screens/WeatherScreenContainer';\n\nimport AppBarComponent from './components/AppBarComponent';\nimport BottomNavigationComponent from './components/BottomNavigationComponent';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\n\nimport appRoutes from './routes';\nimport { store } from './configureStore';\nimport {\n  appDeviceReady,\n} from './actions/globals';\n\n\n\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n});\n\nconst MainCmp = withStyles(styles)((props) => {\n  const { classes } = props;\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={0}>\n        <Grid item xs={12}>\n          <AppBarComponent routes={appRoutes} />\n          <Switch>\n            <Route exact path=\"/\" component={NavigationScreenContainer} />\n            <Route path=\"/currency\" component={CurrencyScreenContainer} />\n            <Route path=\"/weather\" component={WeatherScreenContainer} />\n          </Switch>\n          <BottomNavigationComponent routes={appRoutes}/>\n        </Grid>\n      </Grid>\n    </div>\n  )\n});\n\nclass MainApp extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    if (typeof store !== 'undefined' && store && typeof store.dispatch === 'function')\n      store.dispatch(appDeviceReady());\n  }\n\n  render() {\n    return (\n      <Provider store={store}>\n        {/* <App params={f7params}>\n          <Statusbar />\n          <View id=\"main-view\" url=\"/home/\" main className=\"ios-edges\"/>\n        </App> */}\n        <HashRouter>\n          <MainCmp />\n        </HashRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default MainApp;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// leaflet\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-defaulticon-compatibility/dist/leaflet-defaulticon-compatibility.webpack.css';\nimport 'leaflet-defaulticon-compatibility'\n\nimport './index.css';\nimport 'typeface-roboto';\nimport MainApp from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport FileHelper from './utils/files';\n\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\n\nconst startApp = () => {\n    ReactDOM.render(\n    <MainApp />,\n    document.getElementById('root'));\n    serviceWorker.register();\n};\n\nif(window.cordova) {\n    document.addEventListener('deviceready', startApp, false);\n} else {\n    startApp();\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CurrencyContainer\":\"styles_CurrencyContainer__-zoLB\",\"CurrencyContainer_Input\":\"styles_CurrencyContainer_Input__cEhKs\",\"CurrencyContainer_Select\":\"styles_CurrencyContainer_Select__2KbRl\",\"CurrencyButton\":\"styles_CurrencyButton__34u2p\"};"],"sourceRoot":""}