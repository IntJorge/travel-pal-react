{"version":3,"sources":["selectors/globals.js","selectors/file.js","selectors/form.js","selectors/eventStatus.js","constants/globals.js","actions/globals.js","utils/helpers.js","utils/api.js","components/NavigationScreenComponent/MapComponent.jsx","components/NavigationScreenComponent/LocationMapComponent.jsx","components/NavigationScreenComponent/PlaceInfoCardComponent.jsx","components/NavigationScreenComponent/NavigationScreenComponent.jsx","components/NavigationScreenComponent/index.js","components/HOCToJS.jsx","screens/NavigationScreenContainer.js","constants/form.js","actions/form.js","components/CurrencyScreenComponent/CurrencyScreenComponent.jsx","components/CurrencyScreenComponent/index.js","screens/CurrencyScreenContainer.js","components/WeatherScreenComponent/WeatherTableComponent.jsx","components/WeatherScreenComponent/WeatherItemComponent.jsx","components/WeatherScreenComponent/WeatherScreenComponent.jsx","components/WeatherScreenComponent/index.js","screens/WeatherScreenContainer.js","components/AppBarComponent.jsx","components/BottomNavigationComponent.jsx","routes.js","sagas/currencySaga.js","actions/eventStatusActions.js","constants/eventStatus.js","sagas/globalSaga.js","sagas/index.js","reducers/globalReducer.js","reducers/externalsReducer.js","constants/externals.js","reducers/formReducer.js","reducers/fileReducer.js","constants/file.js","reducers/eventStatusReducer.js","configureStore.js","components/AlertPortalComponent.jsx","containers/AlertPortalContainer.js","App.js","serviceWorker.js","index.js","components/CurrencyScreenComponent/styles.module.scss"],"names":["getGlobalState","state","get","makeSelectGlobalLocation","createSelector","globalState","getIn","Immutable","Map","getFileState","arguments","length","undefined","getFormState","makeSelectFormModelByMeta","formState","meta","getEventStatusState","makeSelectEventStatusModelFieldByMeta","eventStatusState","field","APP_DEVICE_READY","APP_LOCATION_REQUEST","APP_LOCATION_WATCH_CLEAR","APP_WEATHER_REQUEST","appLocationChange","_ref","type","lat","lng","appLocationRequest","appAlertShow","_ref3","title","description","appWeatherChange","_ref4","weather","defaultOptions","timeout","defaultOnError","e","console","error","Helpers","watchLocation","onSuccess","_ref$onError","onError","_ref$options","options","Object","objectSpread","navigator","geolocation","watchPosition","position","coords","latitude","longitude","getCurrentLatLng","_ref2","_ref2$options","getCurrentPosition","stopLocationWatch","watchId","clearWatch","ApiHelper","getLocationDetails","axios","concat","then","response","data","res","results","annotations","components","city","city_district","country","country_code","road","postcode","currency_code","currency","iso_code","name","currency_symbol","symbol","destructureLocData","catch","getRates","_ref4$from","from","_ref4$to","to","rates","Error","getWeather","_ref5","weatherData","dt","main","sys","wind","date","Date","sunriseDate","sunrise","toLocaleTimeString","sunsetDate","sunset","info","toDateString","place","changeCase","upperCaseFirst","iconUrl","icon","toEnum","humidity","pressure","temp","speed","destructureWeatherData","Component","RefreshButton","withStyles","theme","button","top","right","children","classes","onClick","react_default","a","createElement","Button_default","variant","className","LocationMapComponent","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClickReset","gpsLocation","viewport","center","zoom","setState","onRefresh","onLocationRequest","onViewportChanged","height","nextProps","newViewport","window","physicalScreenHeight","screen","_this$props","isPlaceInfoLoading","style","Fragment","TileLayer","url","attribution","Marker","Popup","React","card","margin","marginBottom","loader","width","bullet","display","transform","fontSize","pos","_ref$placeInfo","placeInfo","_ref$isPlaceInfoLoadi","Card_default","load","react_content_loader_es","x","y","rx","ry","CardContent_default","Typography_default","color","gutterBottom","component","NavigationScreenComponent","onSearchbarEnable","searchBar","isSearchActive","onSearchbarDisable","onBlur","event","toggle","onStopLocationWatch","Grid_default","container","root","spacing","item","xs","NavigationScreenComponent_LocationMapComponent","NavigationScreenComponent_PlaceInfoCardComponent","map","bottom","HOCtoJS","WrappedComponent","wrappedComponentProps","propsJS","entries","reduce","newProps","wrappedComponentProp","Iterable","isIterable","toJS","connect","getLocation","getPrevLocation","getFileModel","fileState","getFormModel","getEventStatusField","ownProps","location","formModel","dispatch","HOCToJS","FORM_MODEL_CHANGE","FORM_MODEL_FIELD_CHANGE","formModelChange","overrideModel","_ref$fromSaga","fromSaga","formModelFieldChange","value","_ref2$fromSaga","styles","flexDirection","justifyContent","alignItems","paddingTop","content","CurrencyInputCmp","handleOnChange","values","onChange","isText","isSecondary","classNames","modStyles","CurrencyInput","defineProperty","CurrencyInput__Secondary","number_format_default","maxLength","placeholder","onValueChange","decimalScale","thousandSeparator","displayType","prefix","CurrencyScreenComponent","_this2","_this$props2","_this$props2$formMode","sourceValue","_this$props3","isLoading","_this$props3$formMode","currencySymbol","currencyCode","destValue","numeral","format","CircularProgress_default","CurrencyRoot","CenterArrowIcon","ArrowDownward_default","CurrencyContainer","CurrencyContainer__Secondary","fromJS","id","createData","calories","fat","carbs","protein","rows","marginTop","unit","overflowX","table","minWidth","Paper_default","Table_default","TableHead_default","TableRow_default","TableCell_default","numeric","TableBody_default","row","key","scope","WeatherScreenComponent","onWeatherRequest","isWeatherInfoLoading","_weather$toEnum","_weather$info","src","subTitle","keys","WeatherItemComponent","paddingBottom","padding","textAlign","withRouter","flexGrow","grow","route","routes","pathname","AppBar_default","Toolbar_default","IconButton_default","aria-label","Settings_default","SimpleBottomNavigation","handleChange","history","push","renderRoutes","BottomNavigationAction_default","label","BottomNavigation_default","showLabels","/","PlaceIcon","/currency","AttachMoneyIcon","/weather","CloudIcon","currencySaga","handleFieldChange","regenerator_default","wrap","_context","prev","next","takeLatest","stop","_marked","action","formModelIM","placeInfoModelIM","sourceCurrencyCode","destCurrencyCode","_context2","select","sent","parseFloat","toFixed","put","t0","_marked2","eventStatusModelFieldChange","globalSaga","watchDeviceReadySaga","watchDeviceLocationRequestSaga","watchDeviceLocationWatchClearSaga","watchDeviceWeatherRequest","handleAppDeviceReady","handleDeviceLocationRequest","handleDeviceLocationWatchClear","handleDeviceWeatherRequest","watchGlobalChannel","globalChannel","channel","getGlobalLocationWatchId","getGlobalLocation","all","globalSaga_marked","globalSaga_marked2","_context3","_marked3","_context4","_marked4","_context5","_marked5","_context6","debug","_marked6","_context7","locData","_marked7","_context8","_marked8","_context9","abrupt","_marked9","_context10","take","_marked10","rootSaga","sagas_marked","initialState","prevLocation","locationWatchId","test","alert","isOpen","globalReducer","oldLat","oldLng","setIn","externalsReducer","newState","reducer","set","formReducer","form","newForm","model","fileReducer","file","newFile","eventStatusReducer","eventStatus","newEventStatus","sagaMiddleware","createSagaMiddleware","composeEnhancers","composeWithDevTools","serialize","immutable","store","createStore","combineReducers","globals","externals","applyMiddleware","run","AlertPortalComponent","onDismiss","Dialog_default","open","onClose","aria-labelledby","aria-describedby","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","getAlertIsOpen","getAlertTitle","getAlertDescription","MainCmp","components_AppBarComponent","appRoutes","Switch","Route","exact","path","NavigationScreenContainer","CurrencyScreenContainer","WeatherScreenContainer","BottomNavigationComponent","AlertPortalContainer","MainApp","es","HashRouter","isLocalhost","Boolean","hostname","match","register","config","URL","process","href","origin","addEventListener","swUrl","fetch","contentType","headers","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","startApp","ReactDOM","render","App","document","getElementById","cordova","module","exports","CurrencyContainer__Primary","CurrencyButton","CurrencyInput__Primary"],"mappings":"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","file":"static/js/main.1352af1f.chunk.js","sourcesContent":["import { createSelector } from 'reselect';\r\nimport Immutable from 'immutable';\r\n\r\n\r\nexport const getGlobalState = (state) => state.get('globals');\r\n\r\nexport const makeSelectGlobalLocation = () => createSelector(\r\n    getGlobalState,\r\n    (globalState) => {\r\n        return !globalState ? Immutable.Map() : globalState.getIn(['location'])\r\n    }\r\n);\r\n\r\nexport const makeSelectGlobalPrevLocation = () => createSelector(\r\n    getGlobalState,\r\n    (globalState) => {\r\n        return !globalState ? Immutable.Map() : globalState.getIn(['prevLocation'])\r\n    }\r\n);\r\n\r\nexport const makeSelectGlobalLocationWatchId = () => createSelector(\r\n    getGlobalState,\r\n    (globalState) => {\r\n        return !globalState ? Immutable.Map() : globalState.getIn(['locationWatchId'])\r\n    }\r\n);\r\n\r\nexport const makeSelectGlobalAlertIsOpen = () => createSelector(\r\n    getGlobalState,\r\n    (globalState) => {\r\n        return !globalState ? Immutable.Map() : globalState.getIn(['alert', 'isOpen'])\r\n    }\r\n);\r\n\r\nexport const makeSelectGlobalAlertTitle = () => createSelector(\r\n    getGlobalState,\r\n    (globalState) => {\r\n        return !globalState ? Immutable.Map() : globalState.getIn(['alert', 'title'])\r\n    }\r\n);\r\n\r\nexport const makeSelectGlobalAlertDescription = () => createSelector(\r\n    getGlobalState,\r\n    (globalState) => {\r\n        return !globalState ? Immutable.Map() : globalState.getIn(['alert', 'description'])\r\n    }\r\n);\r\n\r\nexport const makeSelectGlobalWeather = () => createSelector(\r\n    getGlobalState,\r\n    (globalState) => {\r\n        return !globalState ? Immutable.Map() : globalState.getIn(['weater'])\r\n    }\r\n);","import { createSelector } from 'reselect';\r\nimport Immutable from 'immutable';\r\n\r\n\r\nexport const getFileState = (state = {}) => state.get('file');\r\n\r\nexport const makeSelectFileModelByMeta = () => createSelector(\r\n    getFileState,\r\n    (fileState) => (meta) => {\r\n        return !fileState ? undefined: fileState.getIn([meta, 'model'])\r\n    }\r\n);\r\n\r\nexport const makeSelectFileModelFieldByMeta = () => createSelector(\r\n    getFileState,\r\n    (fileState) => (meta, field) => {\r\n        if (!fileState) return undefined;\r\n\r\n        return fileState.getIn([meta, 'model', field]);\r\n    }\r\n);","\r\nimport { createSelector } from 'reselect';\r\nimport Immutable from 'immutable';\r\n\r\n\r\nexport const getFormState = (state = {}) => state.get('form');\r\n\r\nexport const makeSelectFormModelByMeta = () => createSelector(\r\n    getFormState,\r\n    (formState) => (meta) => {\r\n        return !formState ? undefined : formState.getIn([meta, 'model'])\r\n    }\r\n);\r\n\r\nexport const makeSelectFormModelFieldByMeta = () => createSelector(\r\n    getFormState,\r\n    (formState) => (meta, field) => {\r\n        if (!formState) return undefined;\r\n\r\n        return formState.getIn([meta, 'model', field]);\r\n    }\r\n);","\r\nimport { createSelector } from 'reselect';\r\nimport Immutable from 'immutable';\r\n\r\n\r\nexport const getEventStatusState = (state = {}) => state.get('eventStatus');\r\n\r\nexport const makeSelectEventStatusModelByMeta = () => createSelector(\r\n    getEventStatusState,\r\n    (eventStatusState) => (meta) => {\r\n        return !eventStatusState ? undefined : eventStatusState.getIn([meta, 'model'])\r\n    }\r\n);\r\n\r\nexport const makeSelectEventStatusModelFieldByMeta = () => createSelector(\r\n    getEventStatusState,\r\n    (eventStatusState) => (meta, field) => {\r\n        if (!eventStatusState) return undefined;\r\n\r\n        return eventStatusState.getIn([meta, 'model', field]);\r\n    }\r\n);","export const APP_DEVICE_READY = 'APP_DEVICE_READY';\r\nexport const APP_LOCATION_CHANGE = 'APP_LOCATION_CHANGE';\r\nexport const APP_LOCATION_REQUEST = 'APP_LOCATION_REQUEST';\r\nexport const APP_LOCATION_WATCH_CHANGE = 'APP_LOCATION_WATCH_CHANGE';\r\nexport const APP_LOCATION_WATCH_CLEAR = 'APP_LOCATION_WATCH_CLEAR';\r\nexport const APP_ALERT_SHOW = 'APP_ALERT_SHOW';\r\nexport const APP_ALERT_DISMISS = 'APP_ALERT_DISMISS';\r\nexport const APP_WEATHER_REQUEST = 'APP_WEATHER_REQUEST';\r\nexport const APP_WEATHER_CHANGE = 'APP_WEATHER_CHANGE';","import {\r\n    APP_DEVICE_READY,\r\n    APP_LOCATION_CHANGE,\r\n    APP_LOCATION_REQUEST,\r\n    APP_LOCATION_WATCH_CHANGE,\r\n    APP_LOCATION_WATCH_CLEAR,\r\n    APP_ALERT_SHOW,\r\n    APP_ALERT_DISMISS,\r\n    APP_WEATHER_CHANGE,\r\n    APP_WEATHER_REQUEST,\r\n} from '../constants/globals';\r\n\r\n\r\n\r\nexport const appDeviceReady = () => {\r\n    return {\r\n        type: APP_DEVICE_READY,\r\n    };\r\n}\r\n\r\nexport const appLocationChange = ({ lat, lng }) => {\r\n    return {\r\n        type: APP_LOCATION_CHANGE,\r\n        lat,\r\n        lng\r\n    };\r\n};\r\n\r\nexport const appLocationRequest = () => {\r\n    return {\r\n        type: APP_LOCATION_REQUEST,\r\n    };\r\n};\r\n\r\nexport const appLocationWatchChange = ({ watchId }) => {\r\n    return {\r\n        type: APP_LOCATION_WATCH_CHANGE,\r\n        watchId,\r\n    };\r\n};\r\n\r\nexport const appLocationWatchClear = () => {\r\n    return {\r\n        type: APP_LOCATION_WATCH_CLEAR,\r\n    };\r\n};\r\n\r\nexport const appAlertShow = ({ title, description }) => {\r\n    return {\r\n        type: APP_ALERT_SHOW,\r\n        title,\r\n        description,\r\n    };\r\n};\r\n\r\nexport const appAlertDismiss = () => {\r\n    return {\r\n        type: APP_ALERT_DISMISS,\r\n    };\r\n};\r\n\r\nexport const appWeatherRequest = () => {\r\n    return {\r\n        type: APP_WEATHER_REQUEST,\r\n    };\r\n};\r\n\r\nexport const appWeatherChange = ({ weather }) => {\r\n    return {\r\n        type: APP_WEATHER_CHANGE,\r\n        weather,\r\n    };\r\n};\r\n\r\n\r\n","const defaultOptions = { timeout: 5000 };\r\nconst defaultOnError = (e) => {\r\n    console.error(\"Geolocation error \", e);\r\n}\r\nconst Helpers = {\r\n    watchLocation: ({ onSuccess, onError = defaultOnError, options = {...defaultOptions}}) => {\r\n        // console.debug(\"Helpers.watchLocation: getting gps details\");\r\n\r\n        return navigator.geolocation.watchPosition((position) => {\r\n            if (typeof position !== 'undefined') {\r\n                onSuccess && onSuccess({\r\n                    lat: position.coords.latitude,\r\n                    lng: position.coords.longitude,\r\n                });\r\n            }\r\n        }, (error) => {\r\n            console.error(\"Watch Location Error \", error);\r\n            onError && onError(error);\r\n\r\n        }, options);\r\n    },\r\n    getCurrentLatLng: ({ onSuccess, onError, options = defaultOptions } = {}) => {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            // console.debug(\"POSITION\", position);\r\n            if (typeof position !== 'undefined') {\r\n                onSuccess && onSuccess({\r\n                    lat: position.coords.latitude,\r\n                    lng: position.coords.longitude,\r\n                });\r\n            }\r\n        }, onError, options);\r\n    },\r\n    stopLocationWatch: ({ watchId }) => {\r\n        // console.debug(\"Clearing watch id\");\r\n        navigator.geolocation.clearWatch(watchId);\r\n    }\r\n}\r\n\r\n\r\nexport default Helpers;","import axios from 'axios';\r\nimport changeCase from 'change-case';\r\n\r\nconst destructureLocData = ({ data }) => {\r\n    const res = data.results.length > 0 ? data.results[0] : null;\r\n\r\n    if (!res) return null;\r\n\r\n    const { annotations, components } = res;\r\n\r\n    return {\r\n        city: components.city,\r\n        city_district: components.city_district,\r\n        country: components.country,\r\n        country_code: components.country_code,\r\n        road: components.road,\r\n        postcode: components.postcode,\r\n        currency_code: annotations.currency.iso_code,\r\n        currency: annotations.currency.name,\r\n        currency_symbol: annotations.currency.symbol,\r\n    };\r\n};\r\n\r\nconst destructureWeatherData = ({ data }) => {\r\n    const { dt, name, main, sys, weather, wind } = data;\r\n\r\n    const date = new Date(dt*1000);\r\n    const sunriseDate = new Date(sys.sunrise*1000).toLocaleTimeString();\r\n    const sunsetDate = new Date(sys.sunset*1000).toLocaleTimeString();\r\n\r\n    return {\r\n        info: {\r\n            date: `${date.toDateString()} ${date.toLocaleTimeString()}`,\r\n            place: `${name}, ${sys.country}`,\r\n            description: changeCase.upperCaseFirst(`${weather[0].description}`),\r\n            iconUrl: `https://openweathermap.org/img/w/${weather[0].icon}.png`\r\n        },\r\n        toEnum: {\r\n            humidity: `${main.humidity}%`,\r\n            pressure: `${main.pressure} hpa`,\r\n            temp: `${main.temp}°C`,\r\n            wind: `${wind.speed} m/s`,\r\n            sunriseDate,\r\n            sunsetDate,\r\n        },\r\n    };\r\n}\r\n\r\nconst ApiHelper = {\r\n    getLocationDetails: ({ lat, lng, onSuccess, onError }) => {\r\n        axios.get(`https://api.opencagedata.com/geocode/v1/json?q=${lat},${lng}&pretty=1&key=989ee4805561447581b22953c18a3e7b`)\r\n        .then(function (response) {\r\n            // handle success\r\n            // console.debug(\"Opencage\", response);\r\n            onSuccess && onSuccess(destructureLocData({ data: response.data }));\r\n\r\n        })\r\n        .catch(function (error) {\r\n            // handle error\r\n            console.error(error);\r\n\r\n            onError && onError(error);\r\n        });\r\n    },\r\n    getRates: ({ from = 'USD', to = 'EUR', onSuccess, onError }) => {\r\n        try {    \r\n            return axios.get(`https://api.exchangeratesapi.io/latest?base=${from}&symbols=${to}`)\r\n            .then((response) => {\r\n                // handle success\r\n                console.error(response);\r\n                const rates = 1;\r\n                \r\n                if (!response.data || !response.data.rates) {\r\n                    throw new Error(\"No rates found.\");\r\n                }\r\n                \r\n                return response.data.rates[to];\r\n                // onSuccess && onSuccess(response.data.rates[to]);\r\n\r\n            })\r\n            .catch(function (error) {\r\n                // handle error\r\n                console.error(error);\r\n\r\n                //onError && onError(error);\r\n            });\r\n        } catch (error) {\r\n            console.error(error);\r\n\r\n            // onError && onError(error);\r\n        }\r\n    },\r\n    getWeather: ({ lat, lng, onSuccess, onError }) => {\r\n        try {\r\n            axios.get(`https://openweathermap.org/data/2.5/weather/?appid=b6907d289e10d714a6e88b30761fae22&lat=${lat}&lon=${lng}&units=metric`)\r\n            .then((response) => {\r\n                // console.debug(\"OpenWeather\", response);\r\n                const weatherData = destructureWeatherData({ data: response.data });\r\n\r\n                onSuccess && onSuccess(weatherData);\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Axios getWeather Error\", error);\r\n                onError && onError(error);\r\n            })\r\n        } catch (error) {\r\n            console.error(\"ApiHelper.getWeather Error\", error);\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport default ApiHelper;","\r\nimport React, { Component } from 'react';\r\nimport Leaflet from 'leaflet';\r\n\r\nimport Helpers from '../../utils/helpers';\r\nimport ApiHelpers from '../../utils/api';\r\n\r\n\r\nexport default class MapComponent extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n\r\n      this.locationData = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.map = Leaflet.map('map').fitWorld();\r\n\r\n    Leaflet.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {\r\n        // attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\r\n        maxZoom: 18,\r\n        id: 'mapbox.streets',\r\n        accessToken: 'pk.eyJ1Ijoiam9yZ2VpMDI0IiwiYSI6ImNqb2RncW5pbjFkaW0za29qMG1rMGlzanQifQ.96uFcGovHvXXegmXBV62Gg'\r\n    }).addTo(this.map);\r\n\r\n    const marker = Leaflet.marker([51.5, -0.09]).addTo(this.map);\r\n    const currCoords = Leaflet.latLng(53.386848,-6.068040);\r\n    const radius = 100 / 2;\r\n    this.map.setView(currCoords, 16, { maxZoom: 16 });\r\n    this.mainMarker = Leaflet.marker(currCoords).addTo(this.map);\r\n    this.mainCircle = Leaflet.circle(currCoords, radius).addTo(this.map);\r\n    this.watchLocation();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n      console.debug(\"Stopping location watch\", this.locationWatchId);\r\n    Helpers.stopLocationWatch({\r\n        watchId: this.locationWatchId,\r\n    });\r\n  }\r\n\r\n  getLocationInfo = ({ lat, lng }) => {\r\n      const self = this;\r\n    ApiHelpers.getLocationDetails({ \r\n        lat, \r\n        lng,\r\n        onSuccess: (data) => {\r\n            console.log(\"Location Data\", data);\r\n            self.locationData = { ...data };\r\n        }, \r\n        onError: () => {},\r\n    });\r\n  }\r\n\r\n  watchLocation = () => {\r\n    const geolocationSuccess = (position) => {\r\n        if (this.map !== undefined && this.map) {\r\n            const { accuracy, latitude, longitude } = position.coords;\r\n            const currCoords = Leaflet.latLng(latitude, longitude);\r\n            const radius = accuracy / 2;\r\n\r\n            this.map.setView(currCoords, 16, { maxZoom: 16 });\r\n            this.mainMarker.setLatLng(currCoords);\r\n            this.mainCircle.setLatLng(currCoords);\r\n\r\n            this.getLocationInfo({ lat: latitude, lng: longitude });\r\n        }\r\n    };\r\n\r\n    const geolocationError = (message) => {\r\n        navigator.notification.alert(\r\n            message,  // message\r\n            () => {},         // callback\r\n            'Geolocation Error',            // title\r\n            'Dismiss'                  // buttonName\r\n        );\r\n    };\r\n\r\n    this.locationWatchId = Helpers.watchLocation({\r\n        onSuccess: geolocationSuccess,\r\n        onError: geolocationError,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <React.Fragment>     \r\n            <div id=\"map\"></div>\r\n        </React.Fragment>\r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport {\r\n   Map,\r\n   Marker,\r\n   Popup,\r\n   TileLayer,\r\n  } from 'react-leaflet';\r\n\r\n  import { withStyles } from '@material-ui/core/styles';\r\n  import Button from '@material-ui/core/Button';\r\n  \r\n  const styles = theme => ({\r\n    button: {\r\n      position: 'fixed',\r\n      top: '66px',\r\n      right: '10px',\r\n    },\r\n  });\r\n\r\n\r\nconst RefreshButton = withStyles(styles)(({ children, classes, onClick }) => {\r\n  return (  \r\n    <Button variant=\"contained\" className={classes.button} onClick={onClick}>\r\n      { children }\r\n    </Button>\r\n  )\r\n});\r\n\r\nclass LocationMapComponent extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    const { gpsLocation } = props;\r\n\r\n    const initialViewport = {\r\n      center: [gpsLocation.lat-0.0005, gpsLocation.lng],\r\n      zoom: 18,\r\n    };\r\n\r\n    this.state = {\r\n      // viewport: initialViewport,\r\n      lat: 51.505,\r\n      lng: -0.09,\r\n      zoom: 18,\r\n      height: 0\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { viewport } = this.state;\r\n    \r\n    if (!viewport) return;\r\n\r\n    const lat = viewport.center[0];\r\n    const lng = viewport.center[1];\r\n\r\n    if (nextProps.gpsLocation.lat !== lat || nextProps.gpsLocation.lng !== lng) {\r\n      const newViewport = {\r\n        center: [nextProps.gpsLocation.lat-0.0005, nextProps.gpsLocation.lng],\r\n        zoom: 18,\r\n      };\r\n      \r\n      this.setState({\r\n        viewport: newViewport,\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (typeof window !== 'undefined' && window) {\r\n      const physicalScreenHeight = window.screen.height;\r\n\r\n      this.setState({\r\n        height: physicalScreenHeight-112,\r\n      });\r\n    }\r\n    \r\n    this.onClickReset();\r\n    // const { gpsLocation } = this.props;\r\n\r\n    // const newViewport = {\r\n    //   center: [gpsLocation.lat-0.0005, gpsLocation.lng],\r\n    //   zoom: 17,\r\n    // };\r\n\r\n    // this.setState({\r\n    //   viewport: newViewport,\r\n    // });\r\n  }\r\n\r\n  onClickReset = () => {\r\n    // Reset to position provided in props\r\n    const { gpsLocation } = this.props;\r\n\r\n    const viewport = {\r\n      center: [gpsLocation.lat-0.0005, gpsLocation.lng],\r\n      zoom: 18,\r\n    };\r\n\r\n    this.setState({ viewport })\r\n  }\r\n\r\n  onRefresh = () => {\r\n    const { onLocationRequest } = this.props;\r\n\r\n    // this.onClickReset();\r\n    onLocationRequest && onLocationRequest();\r\n  }\r\n\r\n  onViewportChanged = (viewport) => {\r\n    // The viewport got changed by the user, keep track in state\r\n    // console.debug(\"VIEWPORT\", viewport);\r\n    this.setState({ viewport })\r\n  }\r\n\r\n  render () {\r\n    const { gpsLocation, isPlaceInfoLoading } = this.props;\r\n    const position = [gpsLocation.lat, gpsLocation.lng];\r\n    const style = {\r\n      height: `${this.state.height}px`\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n          <Map \r\n            style={style}\r\n            onClick={this.onClickReset}\r\n            onViewportChanged={this.onViewportChanged}\r\n            viewport={this.state.viewport}>\r\n          >\r\n            <TileLayer\r\n              url='http://{s}.tile.osm.org/{z}/{x}/{y}.png'\r\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            />\r\n            {\r\n              isPlaceInfoLoading ? '' : (\r\n                <Marker position={position}>\r\n                  <Popup>\r\n                    <span>This is your<br/>current location.</span>\r\n                  </Popup>\r\n                </Marker>\r\n              )\r\n            }\r\n          </Map>\r\n          <RefreshButton onClick={this.onRefresh}>\r\n            Refresh\r\n          </RefreshButton>\r\n        </React.Fragment>\r\n      )\r\n  }\r\n}\r\n\r\nexport default LocationMapComponent;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport ContentLoader, { List } from 'react-content-loader';\r\n\r\nconst styles = {\r\n  card: {\r\n      margin: '20px',\r\n      marginBottom: '15px',\r\n  },\r\n  loader: {\r\n    width: '100%',\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n};\r\n\r\nconst PlaceInfoCardComponent = ({ classes, placeInfo = {}, isPlaceInfoLoading = false, }) => {\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  const { city, city_district, country, postcode, road } = placeInfo;\r\n  return (\r\n    <Card className={classes.card}>\r\n        {\r\n          isPlaceInfoLoading ? (\r\n            <div className={classes.load}>\r\n              <ContentLoader style={{ width: '100%', margin: '10px', }}>\r\n                  <rect x=\"0\" y=\"0\" rx=\"3\" ry=\"3\" width=\"50%\" height=\"15\" />\r\n                  <rect x=\"0\" y=\"35\" rx=\"3\" ry=\"3\" width=\"90%\" height=\"15\" />\r\n                  <rect x=\"0\" y=\"60\" rx=\"3\" ry=\"3\" width=\"90%\" height=\"15\" />\r\n                  <rect x=\"0\" y=\"85\" rx=\"3\" ry=\"3\" width=\"200\" height=\"15\" />\r\n                  <rect x=\"0\" y=\"110\" rx=\"3\" ry=\"3\" width=\"80%\" height=\"25\" />\r\n              </ContentLoader>\r\n            </div>\r\n          )\r\n          : \r\n          ( \r\n            <React.Fragment>\r\n              <CardContent>\r\n                <Typography className={classes.title} color=\"textSecondary\" variant=\"overline\" gutterBottom>\r\n                  Current Location\r\n                </Typography>\r\n                \r\n                <Typography variant=\"h6\" component=\"h2\">\r\n                  { road }\r\n                </Typography>\r\n                \r\n                <Typography variant=\"h6\" component=\"h2\">\r\n                  { city_district }\r\n                </Typography>\r\n                <Typography variant=\"h6\" component=\"h2\">\r\n                  {\r\n                    !city ? `${country || ''}` : `${city || '--'}, ${country || '--'}`\r\n                  }\r\n                </Typography>\r\n                \r\n                <Typography color=\"textSecondary\" variant=\"h5\" component=\"h2\">\r\n                  { postcode }\r\n                </Typography>\r\n              </CardContent>\r\n              {/* <CardActions>\r\n                <Button size=\"small\">Learn More</Button>\r\n              </CardActions> */}\r\n          </React.Fragment>\r\n          )\r\n        }\r\n    </Card>\r\n  );\r\n}\r\n\r\nPlaceInfoCardComponent.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PlaceInfoCardComponent);","import React from 'react';\r\nimport MapComponent from './MapComponent';\r\nimport LocationMapComponent from './LocationMapComponent';\r\nimport BaseScreenComponent from '../BaseScreenComponent';\r\n\r\nimport PlaceInfoCardComponent from './PlaceInfoCardComponent';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = {\r\n  root: {\r\n    width: '100%'\r\n  },\r\n  map: {\r\n    width: '100%',\r\n    position: 'fixed',\r\n    top: '56px',\r\n  },\r\n  placeInfo: {\r\n    position: 'fixed',\r\n    bottom: '61px',\r\n    width: '100%',\r\n  }\r\n};\r\n\r\n\r\nclass NavigationScreenComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isSearchActive: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { onLocationRequest } = this.props;\r\n\r\n    onLocationRequest && onLocationRequest();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { onStopLocationWatch } = this.props;\r\n\r\n    onStopLocationWatch && onStopLocationWatch();\r\n  }\r\n\r\n  onSearchbarEnable = (searchBar) => {\r\n    this.searchBar = searchBar;\r\n\r\n    this.setState({\r\n      isSearchActive: true,\r\n    });\r\n  }\r\n\r\n  onSearchbarDisable = (searchBar) => {\r\n    this.searchBar = undefined;\r\n\r\n    this.setState({\r\n      isSearchActive: false,\r\n    });\r\n  }\r\n\r\n  onBlur = (event) => {\r\n    if (this.searchBar !== undefined) {\r\n      this.searchBar.toggle();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes, gpsLocation, placeInfo, isPlaceInfoLoading, onLocationRequest } = this.props;\r\n\r\n    return (\r\n      <Grid container className={classes.root} spacing={0}>\r\n        <Grid item xs={12}>\r\n          <LocationMapComponent onLocationRequest={onLocationRequest} gpsLocation={gpsLocation} isPlaceInfoLoading={isPlaceInfoLoading} />\r\n          {\r\n            placeInfo && (\r\n              <div className={classes.placeInfo}>\r\n                <PlaceInfoCardComponent placeInfo={placeInfo} isPlaceInfoLoading={isPlaceInfoLoading} />\r\n              </div>\r\n            )\r\n          }\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default withStyles(styles)(NavigationScreenComponent);","import NavigationScreenComponent from './NavigationScreenComponent';\r\n\r\nexport default NavigationScreenComponent;","import React from 'react';\r\nimport { Iterable } from 'immutable';\r\n\r\nconst HOCtoJS = WrappedComponent => wrappedComponentProps => {\r\n  const KEY = 0;\r\n  const VALUE = 1;\r\n\r\n  const propsJS = Object.entries(wrappedComponentProps).reduce(\r\n    (newProps, wrappedComponentProp) => {\r\n      newProps[wrappedComponentProp[KEY]] = Iterable.isIterable(\r\n        wrappedComponentProp[VALUE]\r\n      )\r\n        ? wrappedComponentProp[VALUE].toJS()\r\n        : wrappedComponentProp[VALUE]\r\n      return newProps\r\n    },\r\n    {}\r\n  )\r\n\r\n  return <WrappedComponent {...propsJS} />\r\n}\r\n\r\nexport default HOCtoJS;","import { connect } from 'react-redux'\r\n\r\nimport {\r\n  makeSelectGlobalLocation,\r\n  makeSelectGlobalPrevLocation,\r\n} from '../selectors/globals';\r\n\r\nimport {\r\n  makeSelectFileModelByMeta,\r\n} from '../selectors/file';\r\n\r\nimport {\r\n  makeSelectFormModelByMeta,\r\n} from '../selectors/form';\r\n\r\nimport {\r\n  makeSelectEventStatusModelFieldByMeta,\r\n} from '../selectors/eventStatus';\r\n\r\nimport {\r\n  appLocationRequest,\r\n  appLocationWatchClear,\r\n} from '../actions/globals';\r\n\r\nimport NavigationScreenComponent from '../components/NavigationScreenComponent';\r\n\r\nimport HOCToJS from '../components/HOCToJS';\r\n\r\nconst makeMapStateToProps = () => {\r\n  const getLocation = makeSelectGlobalLocation();\r\n  const getPrevLocation = makeSelectGlobalPrevLocation();\r\n  const getFileModel = makeSelectFileModelByMeta();\r\n  const getFormModel = makeSelectFormModelByMeta();\r\n  const getEventStatusField = makeSelectEventStatusModelFieldByMeta();\r\n\r\n  const mapStateToProps = (state, ownProps) => {\r\n      const location = getLocation(state);\r\n      const prevLocation = getPrevLocation(state);\r\n      const fileModel = getFileModel(state)('placeInfo');\r\n      const formModel = getFormModel(state)('placeInfo');\r\n      const isPlaceInfoLoading = getEventStatusField(state)('placeInfo', 'isLoading') || false;\r\n\r\n      // console.debug(\"FILE MODEL\", fileModel && fileModel.toJS());\r\n      // console.debug(\"FORM MODEL\", formModel && formModel.toJS());\r\n      // console.debug(\"Location\", location && location.toJS());\r\n\r\n      return {\r\n          gpsLocation: location,\r\n          placeInfo: formModel,\r\n          isPlaceInfoLoading,\r\n          ...ownProps,\r\n      };\r\n  };\r\n\r\n  return mapStateToProps\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onLocationRequest: () => {\r\n      dispatch(appLocationRequest());\r\n    },\r\n    onStopLocationWatch: () => {\r\n      dispatch(appLocationWatchClear());\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(makeMapStateToProps, mapDispatchToProps)(HOCToJS(NavigationScreenComponent));","/**\r\n * form action constants\r\n */\r\nexport const FORM_MODEL_CHANGE = 'FORM_MODEL_CHANGE';\r\nexport const FORM_MODEL_FIELD_CHANGE = 'FORM_MODEL_FIELD_CHANGE';\r\nexport const FORM_MODEL_SAVE = 'FORM_MODEL_SAVE';","import {\r\n    FORM_MODEL_CHANGE,\r\n    FORM_MODEL_SAVE,\r\n    FORM_MODEL_FIELD_CHANGE,\r\n} from '../constants/form';\r\n\r\n\r\nexport const formModelChange = ({ meta, overrideModel, fromSaga = false, }) => {\r\n    return {\r\n        meta,\r\n        overrideModel,\r\n        fromSaga,\r\n        type: FORM_MODEL_CHANGE,\r\n    };\r\n}\r\n\r\nexport const formModelFieldChange = ({ meta, field, value, fromSaga = false, }) => {\r\n    return {\r\n        meta,\r\n        field,\r\n        value,\r\n        fromSaga,\r\n        type: FORM_MODEL_FIELD_CHANGE,\r\n    };\r\n}\r\n\r\nexport const formModelSave = ({ meta }) => {\r\n    return {\r\n        meta,\r\n        type: FORM_MODEL_SAVE,\r\n    };\r\n};","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NumberFormat from 'react-number-format';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport classNames from 'classnames';\r\nimport modStyles from './styles.module.scss';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport numeral from 'numeral';\r\n\r\nconst format = '0.00a.00';\r\n\r\nconst styles = {\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  loader: {\r\n    position: 'fixed',\r\n    top: '0px',\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  container: {\r\n    width: '100%',\r\n    paddingTop: '56px',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n  },\r\n  content: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n};\r\n\r\nclass CurrencyInputCmp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      value: '0.00',\r\n    };\r\n  }\r\n\r\n  handleOnChange = (values) => {\r\n    const { value} = values;\r\n    const { onChange } = this.props;\r\n\r\n    this.setState({\r\n      value,\r\n    });\r\n\r\n    onChange && onChange(value);\r\n  }\r\n\r\n  render() {\r\n    const { isText, isSecondary, value } = this.props;\r\n\r\n    const className = classNames(modStyles.CurrencyInput, {\r\n      [modStyles.CurrencyInput__Secondary]: isSecondary,\r\n    });\r\n\r\n    return (\r\n      <NumberFormat\r\n        className={className}\r\n        maxLength={10}\r\n        placeholder={`0.00`}\r\n        onValueChange={this.handleOnChange}\r\n        value={value} \r\n        decimalScale={2}\r\n        thousandSeparator={true}\r\n        displayType={!isText ? 'input' : 'text'}\r\n        prefix={''}\r\n        />\r\n    );\r\n  }\r\n}\r\n\r\nconst CurrencyInput = withStyles(styles)(CurrencyInputCmp);\r\n\r\nclass CurrencyScreenComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { formModel = {}, onChange } = this.props;\r\n    const sourceValue = formModel['sourceValue'] || '';\r\n  \r\n    onChange && onChange('sourceValue', sourceValue);\r\n  }\r\n\r\n  handleOnChange = (value) => {\r\n    const { onChange } = this.props;\r\n\r\n    onChange && onChange('sourceValue', value);\r\n  }\r\n\r\n  render() {\r\n    const { classes, isLoading, onChange, formModel = {}, currencySymbol, currencyCode, currency } = this.props;\r\n    let destValue = !formModel['destValue'] ? '0.00' : numeral(formModel['destValue']).format(format);\r\n\r\n    return (\r\n      <Grid container className={classes.root} spacing={0}>\r\n        <Grid item xs={12}>\r\n          { isLoading && (\r\n              <div className={classes.loader}>\r\n                <CircularProgress />\r\n              </div>\r\n            )\r\n          }\r\n          {\r\n            !isLoading && (\r\n              <div className={modStyles.CurrencyRoot}>\r\n                <div className={modStyles.CenterArrowIcon}>\r\n                  <ArrowDownwardIcon />\r\n                </div>\r\n                <div className={modStyles.CurrencyContainer}>\r\n                  <Typography variant=\"h5\">\r\n                    { 'United States Dollars' }\r\n                  </Typography>\r\n                  <br />\r\n                  <CurrencyInput \r\n                    onChange={this.handleOnChange}\r\n                    value={formModel['sourceValue'] || ''}\r\n                    currencySymbol={currencySymbol} />\r\n                  <br />\r\n                  <Typography variant=\"h4\" gutterBottom>\r\n                    { 'USD - $' }\r\n                  </Typography>\r\n                </div>\r\n                <div className={modStyles.CurrencyContainer__Secondary}> \r\n                  <Typography variant=\"h5\">\r\n                    { currency }\r\n                  </Typography>  \r\n                  <br />\r\n                  <Typography variant=\"h2\">\r\n                    { destValue }\r\n                  </Typography>\r\n                  <br />\r\n                  <Typography variant=\"h4\" gutterBottom>\r\n                    { currencyCode } - { currencySymbol }\r\n                  </Typography>\r\n                </div>\r\n              </div>\r\n            )\r\n          }\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(CurrencyScreenComponent);","import CurrencyScreenComponent from './CurrencyScreenComponent';\r\n\r\nexport default CurrencyScreenComponent;","import { connect } from 'react-redux'\r\nimport { fromJS } from 'immutable';\r\nimport {\r\n    formModelFieldChange,\r\n} from '../actions/form';\r\n\r\nimport {\r\n    makeSelectFormModelByMeta,\r\n} from '../selectors/form';\r\n\r\nimport {\r\n    makeSelectEventStatusModelFieldByMeta,\r\n  } from '../selectors/eventStatus';\r\n\r\n\r\nimport HOCToJS from '../components/HOCToJS';\r\nimport CurrencyScreenComponent from '../components/CurrencyScreenComponent';\r\n\r\nconst makeMapStateToProps = () => {\r\n    const getFormModel = makeSelectFormModelByMeta();\r\n    const getEventStatusField = makeSelectEventStatusModelFieldByMeta();\r\n\r\n    const mapStateToProps = (state, ownProps) => {\r\n        const isPlaceInfoLoading = getEventStatusField(state)('placeInfo', 'isLoading') || false;\r\n        const formModel = getFormModel(state)('currency');\r\n        const placeInfo =  getFormModel(state)('placeInfo') || fromJS({});\r\n\r\n        const currencySymbol = placeInfo.getIn(['currency_symbol']) || '$';\r\n        const currencyCode = placeInfo.getIn(['currency_code']) || 'USD';\r\n        const currency = placeInfo.getIn(['currency']) || 'United States Dollars';\r\n\r\n        // console.debug(\"FORM MODEL\", formModel && formModel.toJS());\r\n\r\n        return {\r\n            formModel,\r\n            currencySymbol,\r\n            currencyCode,\r\n            currency,\r\n            isLoading: isPlaceInfoLoading,\r\n            ...ownProps,\r\n        };\r\n    };\r\n\r\n    return mapStateToProps\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onChange: (field, value) => dispatch(formModelFieldChange({\r\n            meta: 'currency',\r\n            field,\r\n            value,\r\n        })),\r\n    };\r\n};\r\n\r\nexport default connect(makeMapStateToProps, mapDispatchToProps)(HOCToJS(CurrencyScreenComponent));","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n      marginTop: theme.spacing.unit * 3,\r\n      overflowX: 'auto',\r\n    },\r\n    table: {\r\n      minWidth: 700,\r\n    },\r\n  });\r\n  \r\n  let id = 0;\r\n  function createData(name, calories, fat, carbs, protein) {\r\n    id += 1;\r\n    return { id, name, calories, fat, carbs, protein };\r\n  }\r\n  \r\n  const rows = [\r\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n    createData('Eclair', 262, 16.0, 24, 6.0),\r\n    createData('Cupcake', 305, 3.7, 67, 4.3),\r\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n  ];\r\n  \r\n  function SimpleTable(props) {\r\n    const { classes } = props;\r\n  \r\n    return (\r\n      <Paper className={classes.root}>\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Dessert (100g serving)</TableCell>\r\n              <TableCell numeric>Calories</TableCell>\r\n              <TableCell numeric>Fat (g)</TableCell>\r\n              <TableCell numeric>Carbs (g)</TableCell>\r\n              <TableCell numeric>Protein (g)</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map(row => {\r\n              return (\r\n                <TableRow key={row.id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.name}\r\n                  </TableCell>\r\n                  <TableCell numeric>{row.calories}</TableCell>\r\n                  <TableCell numeric>{row.fat}</TableCell>\r\n                  <TableCell numeric>{row.carbs}</TableCell>\r\n                  <TableCell numeric>{row.protein}</TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    );\r\n  }\r\n  \r\n  SimpleTable.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n  };\r\n  \r\n  export default withStyles(styles)(SimpleTable);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = {\r\n  card: {\r\n    minWidth: 275,\r\n    marginBottom: '2px',\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n};\r\n\r\nfunction SimpleCard(props) {\r\n  const { classes, name, value } = props;\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent>\r\n        <Typography className={classes.title}  color=\"textSecondary\" variant=\"h5\" component=\"h2\" gutterBottom>\r\n          { name }\r\n        </Typography>\r\n        <Typography variant=\"h4\">\r\n          { value }\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nSimpleCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SimpleCard);","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Grid';\r\nimport WeatherTableComponent from './WeatherTableComponent';\r\nimport WeatherItemComponent from './WeatherItemComponent';\r\nimport changeCase from 'change-case';\r\n\r\nconst styles = {\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  content: {\r\n    width: '100%',\r\n    paddingTop: '56px',\r\n    paddingBottom: '66px',\r\n  },\r\n  title: {\r\n    color: '#3f51b5',\r\n    padding: '5px',\r\n    textAlign: 'center',\r\n    paddingTop: '0px',\r\n    paddingBottom: '0px',\r\n  },\r\n  subTitle: {\r\n    color: '#3f51b5',\r\n    padding: '5px',\r\n    textAlign: 'center',\r\n    paddingTop: '0px',\r\n    paddingBottom: '0px',\r\n  },\r\n  icon: {\r\n    textAlign: 'center',\r\n  },\r\n};\r\n\r\n\r\nclass WeatherScreenComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { onWeatherRequest } = this.props;\r\n\r\n    // onWeatherRequest && onWeatherRequest();\r\n  }\r\n  \r\n  render() {\r\n    const { classes, weather, isPlaceInfoLoading, isWeatherInfoLoading } = this.props;\r\n    const { toEnum = {}, info = {} } = weather;\r\n    // console.debug(\"WEATHER\", weather);\r\n\r\n    return (\r\n      <Grid container className={classes.root} spacing={0}>\r\n        <Grid item xs={12}>\r\n          {\r\n            (!isWeatherInfoLoading) && (\r\n              <div className={classes.content}>\r\n                <h1 className={classes.title}>Weather in { info.place }</h1>\r\n                <h5 className={classes.icon}><img src={info.iconUrl} /></h5>\r\n                <h4 className={classes.subTitle}>{ info.description }</h4>\r\n                <h4 className={classes.subTitle}>{ info.date }</h4>\r\n                {\r\n                  Object.keys(toEnum).map(key => {\r\n                    const name = changeCase.upperCaseFirst(key);\r\n\r\n                    return (\r\n                      <WeatherItemComponent key={name} name={name} value={toEnum[key]} />\r\n                    )\r\n                  })\r\n                }\r\n                {/* <WeatherTableComponent /> */}\r\n              </div>\r\n            )\r\n          }\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(WeatherScreenComponent);","import WeatherScreenComponent from './WeatherScreenComponent';\r\n\r\nexport default WeatherScreenComponent;","import { connect } from 'react-redux'\r\nimport { fromJS } from 'immutable';\r\n\r\nimport {\r\n    fileModelFieldChange,\r\n} from '../actions/fileActions';\r\n\r\nimport {\r\n    makeSelectFileModelByMeta,\r\n} from '../selectors/file';\r\n\r\nimport {\r\n    makeSelectGlobalWeather,\r\n} from '../selectors/globals';\r\n\r\nimport {\r\n    appWeatherRequest,\r\n} from '../actions/globals';\r\n\r\nimport {\r\n    makeSelectEventStatusModelFieldByMeta,\r\n} from '../selectors/eventStatus';\r\n\r\nimport HOCToJS from '../components/HOCToJS';\r\nimport WeatherScreenComponent from '../components/WeatherScreenComponent';\r\n\r\nconst makeMapStateToProps = () => {\r\n    const getWeather = makeSelectGlobalWeather()\r\n    const getEventStatusField = makeSelectEventStatusModelFieldByMeta();\r\n\r\n    const mapStateToProps = (state, ownProps) => {\r\n        const weather = getWeather(state) || fromJS({});\r\n        const isPlaceInfoLoading = getEventStatusField(state)('placeInfo', 'isLoading') || false;\r\n        const isWeatherInfoLoading = getEventStatusField(state)('weatherInfo', 'isLoading') || false;\r\n\r\n        return {\r\n            weather,\r\n            isPlaceInfoLoading,\r\n            isWeatherInfoLoading,\r\n            ...ownProps,\r\n        };\r\n    };\r\n\r\n    return mapStateToProps\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onWeatherRequest: () => {\r\n            dispatch(appWeatherRequest());\r\n        },\r\n    };\r\n};\r\n\r\nexport default connect(makeMapStateToProps, mapDispatchToProps)(HOCToJS(WeatherScreenComponent));","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n};\r\n\r\nconst AppBarComponent = (props) => {\r\n  const { classes, routes, location } = props;\r\n\r\n  const route = routes[location.pathname];\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n            { route.title }\r\n          </Typography>\r\n          <IconButton color=\"inherit\" aria-label=\"Open drawer\">\r\n            <SettingsIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nAppBarComponent.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRouter(withStyles(styles)(AppBarComponent));","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\n\r\nconst styles = {\r\n  root: {\r\n    width: '100%',\r\n    position: 'fixed',\r\n    bottom: '0',\r\n  },\r\n};\r\n\r\nclass SimpleBottomNavigation extends React.Component {\r\n    state = {\r\n        value: 0,\r\n    };\r\n\r\n    handleChange = (event, value) => {\r\n        const { routes, history } = this.props;\r\n        const keys = Object.keys(routes);\r\n\r\n        this.setState({\r\n            value\r\n        }, () => {\r\n            history.push(keys[value]);\r\n        });\r\n    }\r\n\r\n    renderRoutes = () => {\r\n        const { routes } = this.props;\r\n\r\n        return Object.keys(routes).map(key => {\r\n            const route = routes[key];\r\n\r\n            return (\r\n                <BottomNavigationAction key={`Nav__${route.title}`} label={route.title} icon={<route.icon />} />\r\n            )\r\n        });\r\n    }\r\n\r\n    render() {\r\n    const { classes, routes } = this.props;\r\n    const { value } = this.state;\r\n\r\n    return (\r\n        <BottomNavigation\r\n            value={value}\r\n            onChange={this.handleChange}\r\n            showLabels\r\n            className={classes.root}\r\n        >\r\n        {\r\n            this.renderRoutes()\r\n        }\r\n        </BottomNavigation>\r\n    );\r\n    }\r\n}\r\n\r\nSimpleBottomNavigation.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRouter(withStyles(styles)(SimpleBottomNavigation));","import PlaceIcon from '@material-ui/icons/Place';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport CloudIcon from '@material-ui/icons/Cloud';\r\n\r\nconst routes = {\r\n    \"/\": {\r\n      title: 'Place',\r\n      icon: PlaceIcon,\r\n    },\r\n    \"/currency\": {\r\n      title: 'Currency',\r\n      icon: AttachMoneyIcon,\r\n    },\r\n    \"/weather\": {\r\n      title: 'Weather',\r\n      icon: CloudIcon,\r\n    },\r\n}\r\n\r\nexport default routes;","/**\r\n * currency saga\r\n */\r\nimport {\r\n    takeLatest,\r\n    call,\r\n    select,\r\n    put,\r\n    delay,\r\n} from 'redux-saga/effects'\r\n\r\nimport {\r\n    FORM_MODEL_FIELD_CHANGE\r\n} from '../constants/form';\r\n\r\nimport {\r\n    formModelFieldChange,\r\n} from '../actions/form';\r\n\r\nimport {\r\n    makeSelectFormModelByMeta,\r\n} from '../selectors/form';\r\n\r\nimport ApiHelper from '../utils/api';\r\n\r\n/**\r\n * saga for source amount field change\r\n */\r\nfunction* currencySaga() {\r\n  yield takeLatest([FORM_MODEL_FIELD_CHANGE], handleFieldChange);\r\n}\r\n\r\nfunction* handleFieldChange(action) {\r\n    const { meta, field, fromSaga, type } = action;\r\n\r\n    if(meta === 'currency' && !fromSaga) {\r\n        try {\r\n            const getFormModel = makeSelectFormModelByMeta();\r\n            const formModelIM = yield select(state => getFormModel(state)('currency'));\r\n            const placeInfoModelIM = yield select(state => getFormModel(state)('placeInfo'));\r\n\r\n            const sourceCurrencyCode = 'USD';\r\n            const destCurrencyCode = !placeInfoModelIM ? 'USD' : placeInfoModelIM.getIn(['currency_code']) || 'USD';\r\n            const sourceValue = !formModelIM ? 0 : formModelIM.getIn(['sourceValue']) || 0;\r\n\r\n            let destValue = '0.00';\r\n            // console.debug(\"CURR\", sourceValue, destCurrencyCode);\r\n\r\n            if (sourceCurrencyCode === destCurrencyCode) {\r\n                destValue = parseFloat(sourceValue).toFixed(2);\r\n            } else {\r\n                const rates = yield call(ApiHelper.getRates, {\r\n                    from: sourceCurrencyCode,\r\n                    to: destCurrencyCode,\r\n                });\r\n\r\n                // console.debug(\"RATES\", rates);\r\n                destValue = (sourceValue * rates).toFixed(2);\r\n            }\r\n\r\n            yield put(formModelFieldChange({\r\n                meta: 'currency',\r\n                field: 'destValue',\r\n                value: destValue,\r\n                fromSaga: true,\r\n            }));\r\n\r\n        } catch(error) {\r\n            console.error(\"Currency Saga Error\", error);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default currencySaga;","import {\r\n    EVENT_STATUS_MODEL_CHANGE,\r\n    EVENT_STATUS_MODEL_FIELD_CHANGE,\r\n} from '../constants/eventStatus';\r\n\r\n\r\nexport const eventStatusModelChange = ({ meta, overrideModel, fromSaga = false }) => {\r\n    return {\r\n        meta,\r\n        type: EVENT_STATUS_MODEL_CHANGE,\r\n        overrideModel,\r\n        fromSaga,\r\n    }\r\n};\r\n\r\nexport const eventStatusModelFieldChange = ({ meta, field, value, fromSaga = false }) => {\r\n    return {\r\n        meta,\r\n        type: EVENT_STATUS_MODEL_FIELD_CHANGE,\r\n        field,\r\n        value,\r\n        fromSaga,\r\n    }\r\n};\r\n\r\n","/**\r\n * \r\n * event satus action constants\r\n */\r\nexport const EVENT_STATUS_MODEL_CHANGE = 'EVENT_STATUS_MODEL_CHANGE';\r\nexport const EVENT_STATUS_MODEL_FIELD_CHANGE = 'EVENT_STATUS_MODEL_FIELD_CHANGE';","\r\nimport { \r\n    channel,\r\n    delay, } from 'redux-saga';\r\nimport {\r\n    all,\r\n    take,\r\n    takeLatest,\r\n    call,\r\n    select,\r\n    put,\r\n} from 'redux-saga/effects'\r\n\r\nimport {\r\n    APP_DEVICE_READY,\r\n    APP_LOCATION_REQUEST\r\n} from '../constants/globals';\r\n\r\nimport {\r\n    fileModelChange,\r\n    fileModelFieldChange,\r\n} from '../actions/fileActions';\r\n\r\nimport {\r\n    appLocationChange,\r\n    appLocationWatchChange,\r\n    appLocationRequest,\r\n    appAlertShow,\r\n    appWeatherChange,\r\n} from '../actions/globals';\r\n\r\nimport {\r\n    formModelChange,\r\n} from '../actions/form';\r\n\r\nimport {\r\n    eventStatusModelFieldChange,\r\n} from '../actions/eventStatusActions';\r\n\r\nimport {\r\n    FORM_MODEL_CHANGE,\r\n} from '../constants/form';\r\n\r\nimport {\r\n    APP_WEATHER_REQUEST,\r\n    APP_LOCATION_WATCH_CLEAR,\r\n} from '../constants/globals';\r\n\r\nimport {\r\n    makeSelectGlobalLocationWatchId,\r\n    makeSelectGlobalLocation,\r\n} from '../selectors/globals';\r\n\r\nimport FileHelper from '../utils/files';\r\nimport ApiHelper from '../utils/api';\r\nimport Helpers from '../utils/helpers';\r\n\r\nconst globalChannel = channel();\r\n\r\nconst getGlobalLocationWatchId = makeSelectGlobalLocationWatchId();\r\nconst getGlobalLocation = makeSelectGlobalLocation();\r\n\r\n/**\r\n * global application saga\r\n */\r\nfunction* globalSaga() {\r\n    yield all([\r\n        watchDeviceReadySaga(),\r\n        watchGlobalChannel(),\r\n        watchDeviceLocationRequestSaga(),\r\n        watchDeviceLocationWatchClearSaga(),\r\n        watchDeviceWeatherRequest(),\r\n    ]);\r\n}\r\n\r\n/**\r\n * watches for device ready action\r\n */\r\nfunction* watchDeviceReadySaga() {\r\n    yield takeLatest(APP_DEVICE_READY, handleAppDeviceReady);\r\n}\r\n\r\n/**\r\n * watches for geolocation request actions\r\n */\r\nfunction* watchDeviceLocationRequestSaga() {\r\n    yield takeLatest(APP_LOCATION_REQUEST, handleDeviceLocationRequest);\r\n}\r\n\r\n/**\r\n * watches for geolocation watch clear request actions\r\n */\r\nfunction* watchDeviceLocationWatchClearSaga() {\r\n    yield takeLatest(APP_LOCATION_WATCH_CLEAR, handleDeviceLocationWatchClear);\r\n}\r\n\r\n/**\r\n * watches for weather request actions\r\n */\r\nfunction* watchDeviceWeatherRequest() {\r\n    yield takeLatest(APP_WEATHER_REQUEST, handleDeviceWeatherRequest);\r\n}\r\n\r\nfunction* handleAppDeviceReady(action) {\r\n    try {\r\n\r\n        console.debug(\"App Device Ready.\");\r\n        yield put(appLocationRequest());\r\n        // FileHelper.requestFileSystem({\r\n        //     fileName: 'globals.json',\r\n        //     onSuccess: (fileEntry) => {\r\n        //         console.log(\"FILE ENTRY\", fileEntry);\r\n        //     },\r\n        // });\r\n\r\n        // yield put(eventStatusModelFieldChange({\r\n        //     meta: 'placeInfo',\r\n        //     field: 'isLoading',\r\n        //     value: true,\r\n        //     fromSaga: true,\r\n        // }));\r\n\r\n        // yield call(Helpers.getCurrentLatLng, ({ onSuccess: ({ lat, lng }) => {\r\n        //     globalChannel.put(appLocationChange({ lat, lng }));\r\n\r\n        //     ApiHelper.getLocationDetails({ lat, lng, onSuccess: (locData) => {\r\n        //         globalChannel.put(formModelChange({ meta: 'placeInfo', overrideModel: { ...locData}, fromSaga: true }));\r\n        //     }});\r\n        // }}));\r\n\r\n        // yield put(eventStatusModelFieldChange({\r\n        //     meta: 'placeInfo',\r\n        //     field: 'isLoading',\r\n        //     value: false,\r\n        //     fromSaga: true,\r\n        // }));\r\n\r\n    } catch (e) {\r\n        console.error(\"handleAppDeviceReady error \", e);\r\n    }\r\n}\r\n\r\n\r\nfunction* handleDeviceLocationRequest(action) {\r\n    yield put(eventStatusModelFieldChange({\r\n        meta: 'placeInfo',\r\n        field: 'isLoading',\r\n        value: true,\r\n        fromSaga: true,\r\n    }));\r\n\r\n    yield call(Helpers.getCurrentLatLng, (\r\n        { \r\n            onSuccess: ({ lat, lng }) => {\r\n                // console.debug(\"GPS Successful\", lat, lng);\r\n                globalChannel.put(appLocationChange({ lat, lng }));\r\n\r\n                ApiHelper.getLocationDetails({ \r\n                    lat,\r\n                    lng,\r\n                    onSuccess: (locData) => {\r\n                        globalChannel.put(formModelChange({ meta: 'placeInfo', overrideModel: { ...locData}, fromSaga: true }));\r\n                    },\r\n                    onError: (error) => {\r\n                        globalChannel.put(appAlertShow({ title: 'OpenCage API Error', description: 'Oops! Error encountered while fething data from OpenCage. Please refresh the map.'}));\r\n\r\n                        // yield call(delay, 2000);\r\n                        globalChannel.put(eventStatusModelFieldChange({\r\n                            meta: 'placeInfo',\r\n                            field: 'isLoading',\r\n                            value: false,\r\n                            fromSaga: true,\r\n                        }));\r\n                    },\r\n                });\r\n\r\n                globalChannel.put(eventStatusModelFieldChange({\r\n                    meta: 'weatherInfo',\r\n                    field: 'isLoading',\r\n                    value: true,\r\n                    fromSaga: true,\r\n                }));\r\n\r\n                ApiHelper.getWeather({\r\n                    lat,\r\n                    lng,\r\n                    onSuccess: (weatherData) => {\r\n                        // console.debug(\"WEATHER DATA\", weatherData);\r\n                        globalChannel.put(appWeatherChange({ weather: weatherData }));\r\n                    \r\n                        globalChannel.put(eventStatusModelFieldChange({\r\n                            meta: 'weatherInfo',\r\n                            field: 'isLoading',\r\n                            value: false,\r\n                            fromSaga: true,\r\n                        }));\r\n                    },\r\n                    onError: (error) => {\r\n                        globalChannel.put(appAlertShow({ title: 'OpenWeather API Error', description: 'Oops! Error encountered while fething data from OpenWeather. Please refresh the map.'}));\r\n\r\n                        // yield call(delay, 2000);\r\n                        globalChannel.put(eventStatusModelFieldChange({\r\n                            meta: 'weatherInfo',\r\n                            field: 'isLoading',\r\n                            value: false,\r\n                            fromSaga: true,\r\n                        }));\r\n                    },\r\n                });\r\n            },\r\n            onError: (e) => {     \r\n                globalChannel.put(appAlertShow({ title: 'GPS Error', description: 'Oops! Location cannot be fetched at the moment. Please refresh the map.'}));\r\n            },\r\n        }\r\n    ));\r\n}\r\n\r\nfunction* handleDeviceLocationWatchClear(action) {\r\n    const watchId = yield select(state => getGlobalLocationWatchId(state));\r\n\r\n    if (watchId !== undefined && watchId !== null) {\r\n        Helpers.stopLocationWatch({ watchId });\r\n    }\r\n}\r\n\r\nfunction* handleDeviceWeatherRequest(action) {\r\n    const location = yield select(state => getGlobalLocation(state));\r\n\r\n    if (!location) return;\r\n\r\n    const lat = location.getIn(['lat']);\r\n    const lng = location.getIn(['lng']);\r\n\r\n    if (!lat || !lng) return;\r\n\r\n    ApiHelper.getWeather({\r\n        lat,\r\n        lng,\r\n        onSuccess: (weatherData) => {\r\n            // console.debug(\"WEATHER DATA\", weatherData);\r\n            globalChannel.put(appWeatherChange({ weather: weatherData }));\r\n        \r\n            globalChannel.put(eventStatusModelFieldChange({\r\n                meta: 'weatherInfo',\r\n                field: 'isLoading',\r\n                value: false,\r\n                fromSaga: true,\r\n            }));\r\n        },\r\n        onError: (error) => {\r\n            globalChannel.put(appAlertShow({ title: 'OpenWeather API Error', description: 'Oops! Error encountered while fething data from OpenWeather. Please refresh the map.'}));\r\n\r\n            // yield call(delay, 2000);\r\n            globalChannel.put(eventStatusModelFieldChange({\r\n                meta: 'weatherInfo',\r\n                field: 'isLoading',\r\n                value: false,\r\n                fromSaga: true,\r\n            }));\r\n        },\r\n    });\r\n}\r\n\r\n\r\nfunction* watchGlobalChannel() {\r\n    while(true) {\r\n        const action = yield take(globalChannel);\r\n        const { type, meta, fromSaga } = action;\r\n        yield put(action);\r\n\r\n        if (type === FORM_MODEL_CHANGE && meta === 'placeInfo' && fromSaga) {\r\n            // yield call(delay, 2000);\r\n            yield put(eventStatusModelFieldChange({\r\n                meta: 'placeInfo',\r\n                field: 'isLoading',\r\n                value: false,\r\n                fromSaga: true,\r\n            }));\r\n        }\r\n    };\r\n}\r\n\r\n\r\nexport default globalSaga;","import { all } from 'redux-saga/effects';\r\nimport currencySaga from './currencySaga';\r\nimport globalSaga from './globalSaga';\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        globalSaga(),\r\n        currencySaga(),\r\n    ]);\r\n}","/**\r\n * externals api reducer\r\n */\r\nimport {\r\n    APP_LOCATION_CHANGE,\r\n    APP_LOCATION_WATCH_CHANGE,\r\n    APP_LOCATION_WATCH_CLEAR,\r\n    APP_ALERT_SHOW,\r\n    APP_ALERT_DISMISS,\r\n    APP_WEATHER_CHANGE,\r\n} from '../constants/globals';\r\n\r\n\r\nimport { fromJS } from 'immutable';\r\n\r\nconst initialState = fromJS({\r\n    location: {\r\n        lat: 53.3498,\r\n        lng: 6.2603,\r\n    },\r\n    prevLocation: {\r\n        lat: 53.3498,\r\n        lng: 6.2603,\r\n    },\r\n    locationWatchId: null,\r\n    test: 'test',\r\n    alert: {\r\n        isOpen: false,\r\n        title: '',\r\n        description: '',\r\n    },\r\n    weather: {},\r\n});\r\n\r\n\r\nconst globalReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case APP_LOCATION_CHANGE:\r\n            const oldLat = state.getIn['location', 'lat'];\r\n            const oldLng = state.getIn['location', 'lng'];\r\n\r\n            return state\r\n                .setIn(['location', 'lat'], action.lat)\r\n                .setIn(['location', 'lng'], action.lng)\r\n                .setIn(['prevLocation', 'lat'], oldLat)\r\n                .setIn(['prevLocation', 'lng'], oldLng);\r\n        case APP_LOCATION_WATCH_CHANGE:\r\n            return state.setIn(['locationWatchId'], action.watchId);\r\n        case APP_LOCATION_WATCH_CLEAR:\r\n            return state.setIn(['locationWatchId'], null);\r\n        case APP_ALERT_SHOW:\r\n            return state\r\n                    .setIn(['alert', 'isOpen'], true)\r\n                    .setIn(['alert', 'title'], action.title)\r\n                    .setIn(['alert', 'description'], action.description);\r\n        case APP_ALERT_DISMISS:\r\n            return state.setIn(['alert', 'isOpen'], false);\r\n        case APP_WEATHER_CHANGE:\r\n            return state.setIn(['weater'], action.weather);\r\n        default:\r\n            return state;\r\n    }\r\n\r\n    return state;\r\n};\r\n\r\nexport default globalReducer;","/**\r\n * externals api reducer\r\n */\r\nimport {\r\n    EXTERNALS_REQUEST,\r\n    EXTERNALS_RECEIVE,\r\n} from '../constants/externals';\r\n\r\n\r\nimport { fromJS } from 'immutable';\r\n\r\nconst reducer = (state, action) => {\r\n\r\n};\r\n\r\n\r\nconst externalsReducer = (state = fromJS({}), action) => {\r\n    let newState = { ...state };\r\n    switch(action.type) {\r\n        case EXTERNALS_REQUEST:\r\n            break;\r\n\r\n        case EXTERNALS_RECEIVE:\r\n            break;\r\n\r\n        default:\r\n            return newState;\r\n    }\r\n\r\n    return newState;\r\n};\r\n\r\nexport default externalsReducer;","/**\r\n * external api action constants\r\n */\r\nexport const EXTERNALS_REQUEST = 'EXTERNALS_REQUEST';\r\nexport const EXTERNALS_RECEIVE = 'EXTERNALS_RECEIVE';","/**\r\n * form reducer\r\n */\r\nimport {\r\n    FORM_MODEL_CHANGE,\r\n    FORM_MODEL_FIELD_CHANGE,\r\n} from '../constants/form';\r\n\r\nimport { fromJS } from 'immutable';\r\n\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case FORM_MODEL_CHANGE:\r\n            return state.set('model', fromJS({ ...action.overrideModel }));    \r\n            \r\n        case FORM_MODEL_FIELD_CHANGE:\r\n            return state.setIn(['model', action.field], action.value);\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\n\r\nconst formReducer = (state = fromJS({}) , action = {}) => {\r\n    if (action.meta !== undefined && action.meta) {\r\n        const form = state.get(action.meta);\r\n        \r\n        if (!form) {\r\n            const newForm = fromJS({\r\n                model: {}\r\n            });\r\n\r\n            return state.set(action.meta, reducer(newForm, action));\r\n        } else {\r\n            return state.set(action.meta, reducer(form, action));\r\n        }\r\n\r\n    }\r\n\r\n    return state;\r\n};\r\n\r\n\r\n\r\nexport default formReducer;","/**\r\n * form reducer\r\n */\r\nimport {\r\n    FILE_MODEL_CHANGE,\r\n    FILE_MODEL_FIELD_CHANGE,\r\n} from '../constants/file';\r\n\r\nimport { fromJS } from 'immutable';\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case FILE_MODEL_CHANGE:\r\n            return state.set('model', fromJS({ ...action.overrideModel }));    \r\n            \r\n        case FILE_MODEL_FIELD_CHANGE:\r\n            return state.setIn(['model', action.field], action.value);\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\n\r\nconst fileReducer = (state = fromJS({}) , action = {}) => {\r\n    if (action.meta !== undefined && action.meta) {\r\n\r\n        const file = state.get(action.meta);\r\n        \r\n        if (!file) {\r\n            const newFile = fromJS({\r\n                model: {}\r\n            });\r\n\r\n            return state.set(action.meta, reducer(newFile, action));\r\n        } else {\r\n            return state.set(action.meta, reducer(file, action));\r\n        }\r\n\r\n    }\r\n\r\n    return state;\r\n};\r\n\r\n\r\n\r\nexport default fileReducer;","/**\r\n * form action constants\r\n */\r\nexport const FILE_MODEL_CHANGE = 'FILE_MODEL_CHANGE';\r\nexport const FILE_MODEL_FIELD_CHANGE = 'FILE_MODEL_FIELD_CHANGE';\r\nexport const FILE_MODEL_SAVE = 'FILE_MODEL_SAVE';\r\nexport const FILE_MODEL_REQUEST = 'FILE_MODEL_REQUEST';\r\nexport const FILE_MODEL_RECEIVE = 'FILE_MODEL_RECEIVE';","/**\r\n * eventStatus reducer\r\n */\r\nimport {\r\n    EVENT_STATUS_MODEL_CHANGE,\r\n    EVENT_STATUS_MODEL_FIELD_CHANGE,\r\n} from '../constants/eventStatus';\r\n\r\nimport { fromJS } from 'immutable';\r\n\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case EVENT_STATUS_MODEL_CHANGE:\r\n            return state.set('model', fromJS({ ...action.overrideModel }));    \r\n            \r\n        case EVENT_STATUS_MODEL_FIELD_CHANGE:\r\n            return state.setIn(['model', action.field], action.value);\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\n\r\nconst eventStatusReducer = (state = fromJS({}) , action = {}) => {\r\n    if (action.meta !== undefined && action.meta) {\r\n        const eventStatus = state.get(action.meta);\r\n        \r\n        if (!eventStatus) {\r\n            const newEventStatus = fromJS({\r\n                model: {}\r\n            });\r\n\r\n            return state.set(action.meta, reducer(newEventStatus, action));\r\n        } else {\r\n            return state.set(action.meta, reducer(eventStatus, action));\r\n        }\r\n\r\n    }\r\n\r\n    return state;\r\n};\r\n\r\n\r\n\r\nexport default eventStatusReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport {\r\n  combineReducers\r\n} from 'redux-immutable';\r\n\r\nimport Immutable from 'immutable';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport rootSaga from './sagas';\r\nimport globalReducer from './reducers/globalReducer';\r\nimport externalsReducer from './reducers/externalsReducer';\r\nimport formReducer from './reducers/formReducer';\r\nimport fileReducer from './reducers/fileReducer';\r\nimport eventStatusReducer from './reducers/eventStatusReducer';\r\n\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\nconst composeEnhancers = composeWithDevTools({\r\n  serialize: {\r\n    immutable: Immutable,\r\n  }\r\n})\r\n\r\nexport const store = createStore(\r\n  combineReducers({\r\n    globals: globalReducer,\r\n    externals: externalsReducer,\r\n    form: formReducer,\r\n    file: fileReducer,\r\n    eventStatus: eventStatusReducer,\r\n  }),\r\n  Immutable.Map(),\r\n  composeEnhancers(\r\n    applyMiddleware(sagaMiddleware),\r\n  )\r\n);\r\n\r\n\r\n// syncFramework7WithStore(store, stateKernel);\r\n\r\n\r\nsagaMiddleware.run(rootSaga);","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nclass AlertPortalComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { isOpen, title, description, onDismiss } = this.props;\r\n        \r\n        return (\r\n            <Dialog\r\n                open={isOpen}\r\n                onClose={onDismiss}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{ title }</DialogTitle>\r\n                <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    { description }\r\n                </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={onDismiss} color=\"primary\">\r\n                    Close\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AlertPortalComponent;","import { connect } from 'react-redux'\r\n\r\nimport {\r\n    makeSelectGlobalAlertIsOpen,\r\n    makeSelectGlobalAlertTitle,\r\n    makeSelectGlobalAlertDescription,\r\n} from '../selectors/globals';\r\n\r\nimport {\r\n    appAlertDismiss,\r\n} from '../actions/globals';\r\n\r\nimport AlertPortalComponent from '../components/AlertPortalComponent';\r\n\r\nimport HOCToJS from '../components/HOCToJS';\r\n\r\nconst makeMapStateToProps = () => {\r\n    const getAlertIsOpen = makeSelectGlobalAlertIsOpen();\r\n    const getAlertTitle = makeSelectGlobalAlertTitle();\r\n    const getAlertDescription = makeSelectGlobalAlertDescription();\r\n\r\n    const mapStateToProps = (state, ownProps) => {\r\n        const isOpen = getAlertIsOpen(state);\r\n        const title = getAlertTitle(state);\r\n        const description = getAlertDescription(state);\r\n\r\n        return {\r\n            isOpen,\r\n            title,\r\n            description,\r\n            ...ownProps,\r\n        };\r\n    };\r\n\r\n    return mapStateToProps\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      onDismiss: () => {\r\n          dispatch(appAlertDismiss());\r\n      },\r\n  };\r\n};\r\n\r\nexport default connect(makeMapStateToProps, mapDispatchToProps)(HOCToJS(AlertPortalComponent));","import React from 'react';\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter as Router, HashRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport NavigationScreenContainer from './screens/NavigationScreenContainer';\r\nimport CurrencyScreenContainer from './screens/CurrencyScreenContainer';\r\nimport WeatherScreenContainer from './screens/WeatherScreenContainer';\r\n\r\nimport AppBarComponent from './components/AppBarComponent';\r\nimport BottomNavigationComponent from './components/BottomNavigationComponent';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nimport appRoutes from './routes';\r\nimport { store } from './configureStore';\r\nimport {\r\n  appDeviceReady,\r\n} from './actions/globals';\r\n\r\nimport AlertPortalContainer from './containers/AlertPortalContainer';\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nconst MainCmp = withStyles(styles)((props) => {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12}>\r\n          <AppBarComponent routes={appRoutes} />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={NavigationScreenContainer} />\r\n            <Route path=\"/currency\" component={CurrencyScreenContainer} />\r\n            <Route path=\"/weather\" component={WeatherScreenContainer} />\r\n          </Switch>\r\n          <BottomNavigationComponent routes={appRoutes}/>\r\n        </Grid>\r\n      </Grid>\r\n      <AlertPortalContainer />\r\n    </div>\r\n  )\r\n});\r\n\r\nclass MainApp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (typeof store !== 'undefined' && store && typeof store.dispatch === 'function')\r\n      store.dispatch(appDeviceReady());\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        {/* <App params={f7params}>\r\n          <Statusbar />\r\n          <View id=\"main-view\" url=\"/home/\" main className=\"ios-edges\"/>\r\n        </App> */}\r\n        <HashRouter>\r\n          <MainCmp />\r\n        </HashRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainApp;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n// leaflet\r\nimport 'leaflet/dist/leaflet.css';\r\nimport 'leaflet-defaulticon-compatibility/dist/leaflet-defaulticon-compatibility.webpack.css';\r\nimport 'leaflet-defaulticon-compatibility'\r\n\r\nimport './index.css';\r\nimport 'typeface-roboto';\r\nimport MainApp from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport FileHelper from './utils/files';\r\n\r\n\r\n// // If you want your app to work offline and load faster, you can change\r\n// // unregister() to register() below. Note this comes with some pitfalls.\r\n// // Learn more about service workers: http://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n\r\n\r\nconst startApp = () => {\r\n    ReactDOM.render(\r\n    <MainApp />,\r\n    document.getElementById('root'));\r\n    serviceWorker.register();\r\n};\r\n\r\nif(window.cordova) {\r\n    document.addEventListener('deviceready', startApp, false);\r\n} else {\r\n    startApp();\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CurrencyRoot\":\"styles_CurrencyRoot__3IBvg\",\"CurrencyContainer\":\"styles_CurrencyContainer__1P1bU\",\"CurrencyContainer__Primary\":\"styles_CurrencyContainer__Primary__nuYdZ\",\"CurrencyContainer__Secondary\":\"styles_CurrencyContainer__Secondary__28JfP\",\"CurrencyButton\":\"styles_CurrencyButton__3RPAk\",\"CurrencyInput\":\"styles_CurrencyInput__215er\",\"CurrencyInput__Primary\":\"styles_CurrencyInput__Primary__I_Dr7\",\"CurrencyInput__Secondary\":\"styles_CurrencyInput__Secondary__3R3Cr\",\"CenterArrowIcon\":\"styles_CenterArrowIcon__3Gmdb\"};"],"sourceRoot":""}